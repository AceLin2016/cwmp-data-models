<?xml version="1.0" encoding="UTF-8"?>
<!-- DO NOT EDIT; generated by Broadband Forum report.pl#420 (2017/06/12 version) on 2017/06/15 at 17:42:00.
     report.pl -exitcode=fatals -nowarnreport -quiet -report=xml -outfile=il-181-L2TPv3-full.xml il-181-L2TPv3.xml
     See https://github.com/BroadbandForum/cwmp-xml-tools/tree/master/Report_Tool. -->
<!--
  Copyright (c) 2017, Broadband Forum
  
  Redistribution and use in source and binary forms, with or
  without modification, are permitted provided that the following
  conditions are met:
  
  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
  
  2. Redistributions in binary form must reproduce the above
     copyright notice, this list of conditions and the following
     disclaimer in the documentation and/or other materials
     provided with the distribution.
  
  3. Neither the name of the copyright holder nor the names of its
     contributors may be used to endorse or promote products
     derived from this software without specific prior written
     permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  
  The above license is used as a license under copyright only.
  Please reference the Forum IPR Policy for patent licensing terms
  <https://www.broadband-forum.org/ipr-policy>.
  
  Any moral rights which are necessary to exercise under the above
  license grant are also deemed granted under this license.
-->
<dm:document xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-5"
             xmlns:dmr="urn:broadband-forum-org:cwmp:datamodel-report-0-1"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="urn:broadband-forum-org:cwmp:datamodel-1-5 http://www.broadband-forum.org/cwmp/cwmp-datamodel-1-5.xsd urn:broadband-forum-org:cwmp:datamodel-report-0-1 http://www.broadband-forum.org/cwmp/cwmp-datamodel-report.xsd"
             spec="urn:broadband-forum-org:il-181-L2TPv3" file="il-181-L2TPv3-full.xml">
  <description>
    IL-181-L2TPv3
  </description>
  <dataType name="IPAddress">
    <description>
      IP address, i.e. IPv4 address (or IPv4 subnet mask) or IPv6 address.
      All IPv4 addresses and subnet masks MUST be represented as strings in IPv4 dotted-decimal notation.  Here are some examples of valid IPv4 address textual representations:
      * 216.52.29.100
      * 192.168.1.254
      All IPv6 addresses MUST be represented using any of the 3 standard textual representations defined in {{bibref|RFC4291}} Sections 2.2.1, 2.2.2 and 2.2.3.  Both lower-case and upper-case letters can be used, but use of lower-case letters is RECOMMENDED.  Here are some examples of valid IPv6 address textual representations:
      * 1080:0:0:800:ba98:3210:11aa:12dd
      * 1080::800:ba98:3210:11aa:12dd
      * 0:0:0:0:0:0:13.1.68.3
      IPv6 addresses MUST NOT include zone identifiers. Zone identifiers are discussed in {{bibref|RFC4007|Section 6}}.
      Unspecified or inapplicable addresses (or IPv4 subnet masks) MUST be represented as empty strings unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="45"/>
    </string>
  </dataType>
  <dataType name="IPv4Address" base="IPAddress">
    <description>
      IPv4 address (or subnet mask).
      Can be any IPv4 address that is permitted by the ''IPAddress'' data type.
    </description>
    <size maxLength="15"/>
  </dataType>
  <dataType name="IPv6Address" base="IPAddress">
    <description>
      IPv6 address.
      Can be any IPv6 address that is permitted by the ''IPAddress'' data type.
    </description>
    <size maxLength="45"/>
  </dataType>
  <dataType name="IPPrefix">
    <description>
      IPv4 or IPv6 routing prefix in Classless Inter-Domain Routing (CIDR) notation {{bibref|RFC4632}}. This is specified as an IP address followed by an appended "/n" suffix, where ''n'' (the prefix size) is an integer in the range 0-32 (for IPv4) or 0-128 (for IPv6) that indicates the number of (leftmost) '1' bits of the routing prefix. 
      * IPv4 example: 192.168.1.0/24
      * IPv6 example: 2001:edff:fe6a:f76::/64
      If the IP address part is unspecified or inapplicable, it MUST be {{empty}} unless otherwise specified by the parameter definition.  In this case the IP prefix will be of the form "/n".
      If the entire IP prefix is unspecified or inapplicable, it MUST be {{empty}} unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="49"/>
    </string>
  </dataType>
  <dataType name="IPv4Prefix" base="IPPrefix">
    <description>
      IPv4 address prefix. 
      Can be any IPv4 prefix that is permitted by the ''IPPrefix'' data type.
    </description>
    <size maxLength="18"/>
  </dataType>
  <dataType name="IPv6Prefix" base="IPPrefix">
    <description>
      IPv6 address prefix.
      Can be any IPv6 prefix that is permitted by the ''IPPrefix'' data type.
    </description>
    <size maxLength="49"/>
  </dataType>
  <dataType name="MACAddress">
    <description>
      All MAC addresses are represented as strings of 12 hexadecimal digits (digits 0-9, letters A-F or a-f) displayed as six pairs of digits separated by colons.  Unspecified or inapplicable MAC addresses MUST be represented as empty strings unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="17"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){5}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType name="StatsCounter32">
    <description>
      A 32-bit statistics parameter, e.g. a byte counter.
      This data type SHOULD NOT be used for statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt'' (i.e. 0xffffffff, referred to below as ''maxval''). ''StatsCounter64'' SHOULD be used for such parameters.
      The value ''maxval'' indicates that no data is available for this parameter.  In the unlikely event that the actual value of the statistic is ''maxval'', the CPE SHOULD return ''maxval - 1''.
      The actual value of the statistic might be greater than ''maxval''. Such values SHOULD wrap around through zero.
      The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.
    </description>
    <unsignedInt>
    </unsignedInt>
  </dataType>
  <dataType name="StatsCounter64">
    <description>
      A 64-bit statistics parameter, e.g. a byte counter.
      This data type SHOULD be used for all statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt''.
      The maximum value that can be represented as an ''unsignedLong'' (i.e. 0xffffffffffffffff) indicates that no data is available for this parameter.
      The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.
    </description>
    <unsignedLong>
    </unsignedLong>
  </dataType>
  <dataType name="Alias">
    <description>
      A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.
      If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}, the following mandatory constraints MUST be enforced:
      *Its value MUST NOT be empty.
      *Its value MUST start with a letter.
      *If its value is not assigned by the ACS, it MUST start with a "cpe-" prefix.
      *The CPE MUST NOT change the parameter value.
    </description>
    <string>
      <size maxLength="64"/>
    </string>
  </dataType>
  <dataType name="Dbm1000">
    <description>
      The value is measured in ''dBm/1000'', i.e. the value divided by 1000 is dB relative to 1 mW.  For example, -12345 means -12.345 dBm, 0 means 0 dBm (1 mW) and 12345 means 12.345 dBm.
    </description>
    <int>
    </int>
  </dataType>
  <dataType name="UUID">
    <description>
      Universally Unique Identifier.  See {{bibref|RFC4122}}.
    </description>
    <string>
      <size minLength="36" maxLength="36"/>
      <pattern value="[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"/>
    </string>
  </dataType>
  <dataType name="IEEE_EUI64">
    <description>
      The IEEE EUI 64-bit identifier as defined in {{bibref|EUI64}}. The IEEE defined 64-bit extended unique identifier (EUI-64) is a concatenation of:
      * The 24-bit (OUI-24) or 36-bit (OUI-36) company_id value assigned by the IEEE Registration Authority (IEEE-RA), and
      * The extension identifier (40 bits for OUI-24 or 28 bits for OUI-36) assigned by the organization with that company_id assignment.
    </description>
    <string>
      <size maxLength="23"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){7}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType name="ZigBeeNetworkAddress">
    <description>
      The ZigBee 16-bit network address (NWK) as defined in {{bibref|ZigBee2007}}. The address is assigned to a device by the network layer and used by the network layer for routing messages between devices.
    </description>
    <string>
      <size maxLength="4"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f]){4}"/>
    </string>
  </dataType>
  <bibliography>
    <reference id="RFC2863">
      <name>RFC 2863</name>
      <title>The Interfaces Group MIB</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>http://tools.ietf.org/html/rfc2863</hyperlink>
    </reference>
    <reference id="RFC3931">
      <name>RFC 3931</name>
      <title>Layer Two Tunneling Protocol - Version 3 (L2TPv3)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>March 2005</date>
      <hyperlink>http://tools.ietf.org/html/rfc3931</hyperlink>
    </reference>
    <reference id="RFC4122">
      <name>RFC 4122</name>
      <title>A Universally Unique IDentifier (UUID) URN Namespace</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2005</date>
      <hyperlink>http://tools.ietf.org/html/rfc4122</hyperlink>
    </reference>
    <reference id="RFC4291">
      <name>RFC 4291</name>
      <title>IP Version 6 Addressing Architecture</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>http://tools.ietf.org/html/rfc4291</hyperlink>
    </reference>
    <reference id="RFC4632">
      <name>RFC 4632</name>
      <title>Classless Inter-domain Routing (CIDR): The Internet Address Assignment and Aggregation Plan</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>http://tools.ietf.org/html/rfc4632</hyperlink>
    </reference>
    <reference id="RFC4719">
      <name>RFC 4719</name>
      <title>Transport of Ethernet Frames over Layer 2 Tunneling Protocol Version 3 (L2TPv3)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>November 2006</date>
      <hyperlink>http://tools.ietf.org/html/rfc4719</hyperlink>
    </reference>
    <reference id="SOAP1.1">
      <name>Simple Object Access Protocol (SOAP) 1.1</name>
      <organization>W3C</organization>
      <hyperlink>http://www.w3.org/TR/2000/NOTE-SOAP-20000508</hyperlink>
    </reference>
    <reference id="TR-069a4">
      <name>TR-069 Amendment 4</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2011</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-069_Amendment-4.pdf</hyperlink>
    </reference>
    <reference id="TR-106a7">
      <name>TR-106 Amendment 7</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2013</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-106_Amendment-7.pdf</hyperlink>
    </reference>
    <reference id="TR-181i2">
      <name>TR-181 Issue 2</name>
      <title>Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2010</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-181_Issue-2.pdf</hyperlink>
    </reference>
    <reference id="ZigBee2007">
      <name>ZigBee 2007 Specification</name>
      <title>ZigBee 2007 Specification</title>
      <organization>ZigBee Alliance</organization>
      <date>October 2007</date>
      <hyperlink>http://www.zigbee.org/Specifications/ZigBee/download.aspx</hyperlink>
    </reference>
  </bibliography>
  <model name="il-181-L2TPv3">
    <object name="Device." access="readOnly" dmr:version="1.0">
    </object>
    <object name="Device.L2TPv3." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains parameters associated with the configuration and monitoring of stateless tunnels using the Layer Two Tunneling Protocol version 3 (L2TPv3) ({{bibref|RFC3931}}).
        This object also provides a means to treat packets that are encapsulated within a L2TPv3 Tunnel by using a set of {{object|Filter}} objects to determine the treatment of the packet.
      </description>
      <parameter name="TunnelNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}." access="readWrite" numEntriesParameter="TunnelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        L2TPv3 Tunnel table, models the L2TPv3 Tunnel instance and represents the entry point and exit point of the tunnel in relation to the WAN interface.
        A {{object}} object has one or more {{object|Interface}} objects that further define the sessions or flows within the tunnel.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the tunnel.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          The current operational state of the tunnel.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="1.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="RemoteEndpoints" access="readWrite" dmr:version="1.0">
        <description>
                    The Fully Qualified Domain Name (FQDN) or IP address of the remote L2TPv3 tunnel endpoint.
          If more than one name/address is supplied, they will be tried in turn, i.e. they are in decreasing order of precedence.
        </description>
        <syntax>
          <list maxItems="4">
            <size/>
          </list>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="KeepAlivePolicy" access="readWrite" dmr:version="1.0">
        <description>
          The mechanism used to keep the tunnel from timing out at the {{param|ConnectedRemoteEndpoint}}.
        </description>
        <syntax>
          <string>
            <enumeration value="ICMP"/>
            <enumeration value="None"/>
          </string>
          <default type="object" value="None"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveTimeout" access="readWrite" dmr:version="1.0">
        <description>
          The tunnel keepalive timeout in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="10"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveThreshold" access="readWrite" dmr:version="1.0">
        <description>
          Number of KeepAlive messages unacknowledged by the {{param|ConnectedRemoteEndpoint}} before the {{object}} is perceived failed.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="3"/>
        </syntax>
      </parameter>
      <parameter name="DeliveryHeaderProtocol" access="readWrite" dmr:version="1.0">
        <description>
          The protocol used for the delivery header.
        </description>
        <syntax>
          <string>
            <enumeration value="IPv4"/>
            <enumeration value="IPv6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultDSCPMark" access="readWrite" dmr:version="1.0">
        <description>
          If the specified entries in the {{object|#.Filter}} table do not match this {{object}} object or an instance of the {{object|Interface}} object for this {{object}} object, then the value of this parameter is applied to the delivery header of the packets in this {{object}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TunnelEncapsulation" access="readWrite" dmr:version="1.0">
        <description>
          The protocol that this {{object}} will be encapsulated
        </description>
        <syntax>
          <string>
            <enumeration value="IP"/>
            <enumeration value="UDP"/>
          </string>
          <default type="object" value="IP"/>
        </syntax>
      </parameter>
      <parameter name="ConnectedRemoteEndpoint" access="readOnly" dmr:version="1.0">
        <description>
          The Fully Qualified Domain Name (FQDN) name or IP address of the connected remote L2TPv3 tunnel endpoint.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}.UDP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This {{object}} provides the parameters when the value of the {{param|##.Tunnel.{i}.TunnelEncapsulation}} parameter is {{enum|UDP|##.Tunnel.{i}.TunnelEncapsulation}}.
      </description>
      <parameter name="SourcePort" access="readWrite" dmr:version="1.0">
        <description>
          The source (local) port used to transmit PDUs. A value of 0 indicates that the port selection is performed by the device.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1701"/>
        </syntax>
      </parameter>
      <parameter name="RemotePort" access="readWrite" dmr:version="1.0">
        <description>
          The remote port used to by the remote endpoint to transmit PDUs.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1701"/>
        </syntax>
      </parameter>
      <parameter name="EnableChecksum" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables checksum processing.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        Statistics for this L2TPv3 tunnel, i.e. all traffic that has passed through the tunnel.
        The device MUST reset the tunnel's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the tunnel becomes operationally down due to a previous administrative down (i.e., Status parameter transitions to a disabled state after the tunnel has been disabled) or when the tunnel becomes administratively up (i.e. the Enable parameter transitioned from {{false}} to {{true}}).
      </description>
      <parameter name="KeepAliveSent" access="readOnly" dmr:version="1.0">
        <description>
          The total number of KeepAlive {{units}} sent out the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="messages"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="KeepAliveReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of KeepAlive {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="messages"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesSent" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} sent by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} sent by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} discarded by the tunnel due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} received by the tunnel that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        L2TPv3 Interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        The {{object}} object models the L2TPv3 Header as defined in {{bibref|RFC3931}} and the transport of L2 frames across over L2TPv3 as defined in {{bibref|RFC4719}}.
        The {{object}} object provides a way to discriminate how sessions or flows are encapsulated within the L2TPv3 Tunnel.
        In addition the {{object}} object represents the entry point and exit point of the tunnel in relation to the LAN interface.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface). 
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="1.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="1.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="1.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SessionID" access="readWrite" dmr:version="1.0">
        <description>
          The unique Session ID to be used in the L2TPv3 header of the tunnel.
          A Session ID with a value of -1 indicates that he CPE is to generate the session ids for this {{object}} instance.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="-1"/>
            <range minInclusive="1" maxInclusive="65535"/>
          </int>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="CookiePolicy" access="readWrite" dmr:version="1.0">
        <description>
          The policy that defines how the Cookie is handled in this {{object}} instance.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled">
              <description>
                The device does not perform Cooking processing.
              </description>
            </enumeration>
            <enumeration value="Configured">
              <description>
                The value of the {{param|Cookie}} parameter is transmitted in the L2TPv3 header.
              </description>
            </enumeration>
            <enumeration value="Generated">
              <description>
                The device generates the value of the Cookie transmitted in the L2TPv3 header.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Configured"/>
        </syntax>
      </parameter>
      <parameter name="Cookie" access="readWrite" dmr:version="1.0">
        <description>
          The Cookie transmitted in the L2TPv3 header. The default is to set the Cookie to the device's MAC address that is encoded in the low order 6 bytes.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        Statistics for this L2TPv3 tunnel interface, i.e. all traffic that has passed through the interface.
        The device MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e., the interface's Status parameter transitions to a down state after the interface has been disabled) or when the interface becomes administratively up (i.e. the Enable parameter transitioned from {{false}} to {{true}}).
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} sent by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} received by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} sent by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} received by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} discarded by this interface due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} received by this interface that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardChecksumReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} received by the tunnel interface that are discarded because of Checksum errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardSequenceNumberReceived" access="readOnly" dmr:version="1.0">
        <description>
          The total number of {{units}} received by the tunnel interface that are discarded because of Sequence Number errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        L2TPv3 Filter table. Entries in this table are applied against the packets that are to be encapsulated within the L2TPv3 Tunnel based on the following conditions:
        * If the value of the {{param|AllInterfaces}} is {{true}}, then this entry will be applied to all {{object|#.Tunnel}} and {{object|#.Tunnel.{i}.Interface}} instances.
        * If the value of {{param|AllInterfaces}} is {{false}} and the value of {{param|Interface}} parameter is a reference to a row in the {{object|#.Tunnel}} table then this entry is applied to all {{object|#.Tunnel.{i}.Interface}} instances of the {{object|#.Tunnel}} reference.
        * If the value of {{param|AllInterfaces}} is {{false}} and the value of {{param|Interface}} parameter is a reference to a row in the {{object|#.Tunnel.{i}.Interface}} table then this entry is applied to the {{object|#.Tunnel.{i}.Interface}} reference.
        * If no entries are matched for the packet, then the default treatment (e.g., {{param|#.Tunnel.{i}.DefaultDSCPMark}}) is applied to the packet.
        For enabled table entries, if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables this filter.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          The status of this filter.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="1.0">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each packet, the highest ordered entry that matches the filter criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="1.0">
        <description>
          A non-volatile handle used to reference this instance. {{param}} provides a mechanism for an ACS to label this instance for future reference. An initial unique value MUST be assigned when the CPE creates an instance of this object.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="1.0">
        <description>
          Filter criterion. {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Tunnel. #.Tunnel.{i}.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllInterfaces" access="readWrite" dmr:version="1.0">
        <description>
          Filter criterion. This specifies that all ingress L2TPv3 tunnel interfaces are associated with the entry. If {{true}}, the value of {{param|Interface}} is ignored since all ingress L2TPv3 tunnel interfaces are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDCheck" access="readWrite" dmr:version="1.0">
        <description>
          Filter criterion.
          Current outer Ethernet VLAN ID as defined in 802.1Q. A value of -1 indicates this criterion is not used for filtering.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDExclude" access="readWrite" dmr:version="1.0">
        <description>
          If {{false}}, the filter includes only those packets that match the {{param|VLANIDCheck}} entry, if specified.
          If {{true}}, the filter includes all packets except those that match the {{param|VLANIDCheck}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCPMarkPolicy" access="readWrite" dmr:version="1.0">
        <description>
          DSCP with which to mark the outer IP header for traffic that is associated with the interface criterion.
          Automatic DSCP marking behavior is a local matter to the device, possibly influenced by other Broadband Forum standards that it supports.
          * A value of -1 indicates copy from the upstream packet.
          * A value of -2 indicates automatic marking of DSCP.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2" maxInclusive="63"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <profile name="L2TPv3Basic:1">
      <object ref="Device.L2TPv3." requirement="present">
        <parameter ref="TunnelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="RemoteEndpoints" requirement="readWrite"/>
        <parameter ref="KeepAlivePolicy" requirement="readWrite"/>
        <parameter ref="KeepAliveTimeout" requirement="readWrite"/>
        <parameter ref="KeepAliveThreshold" requirement="readWrite"/>
        <parameter ref="DeliveryHeaderProtocol" requirement="readWrite"/>
        <parameter ref="TunnelEncapsulation" requirement="readWrite"/>
        <parameter ref="ConnectedRemoteEndpoint" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.UDP." requirement="present">
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="RemotePort" requirement="readWrite"/>
        <parameter ref="EnableChecksum" requirement="readWrite"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Interface.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readOnly"/>
        <parameter ref="SessionID" requirement="readWrite"/>
        <parameter ref="CookiePolicy" requirement="readWrite"/>
        <parameter ref="Cookie" requirement="readWrite"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="L2TPv3Adv:1" extends="L2TPv3Basic:1">
      <object ref="Device.L2TPv3." requirement="present">
        <parameter ref="FilterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}." requirement="createDelete">
        <parameter ref="DefaultDSCPMark" requirement="readWrite"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="KeepAliveSent" requirement="readOnly"/>
        <parameter ref="KeepAliveReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Interface.{i}.Stats." requirement="present">
        <parameter ref="DiscardChecksumReceived" requirement="readOnly"/>
        <parameter ref="DiscardSequenceNumberReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Filter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AllInterfaces" requirement="readWrite"/>
        <parameter ref="VLANIDCheck" requirement="readWrite"/>
        <parameter ref="VLANIDExclude" requirement="readWrite"/>
        <parameter ref="DSCPMarkPolicy" requirement="readWrite"/>
      </object>
    </profile>
  </model>
</dm:document>
