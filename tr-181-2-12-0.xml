<?xml version="1.0" encoding="UTF-8"?>
<!--
  TR-069 Device:2.12 Root Object definition

  Copyright (c) 2010-2017, Broadband Forum
  
  Redistribution and use in source and binary forms, with or
  without modification, are permitted provided that the following
  conditions are met:
  
  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
  
  2. Redistributions in binary form must reproduce the above
     copyright notice, this list of conditions and the following
     disclaimer in the documentation and/or other materials
     provided with the distribution.
  
  3. Neither the name of the copyright holder nor the names of its
     contributors may be used to endorse or promote products
     derived from this software without specific prior written
     permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  
  The above license is used as a license under copyright only.
  Please reference the Forum IPR Policy for patent licensing terms
  <https://www.broadband-forum.org/ipr-policy>.
  
  Any moral rights which are necessary to exercise under the above
  license grant are also deemed granted under this license.
  
  Summary:
  TR-069 Device:2.12 Root Object definition.

  Editors:
  * John Blackford, ARRIS
  * Tim Carey, Nokia
  * Tim Spets, Greenwave System

  Broadband User Service Work Area Directors:
  * Jason Walls, QA Cafe
  * John Blackford, ARRIS

  Issue History (Filename: Approval Date: Publication Date: Changes):
  * tr-181-2-0-0.xml: May 2010:
    - corresponds to TR-181 Issue 2.
  * tr-181-2-1-0.xml: November 2010:
    - corresponds to TR-181 Issue 2 Amendment 1.
  * tr-181-2-2-0.xml: March 2011:
    - corresponds to TR-181 Issue 2 Amendment 2.
  * tr-181-2-3-0.xml: September 2011:
    - corresponds to TR-181 Issue 2 Amendment 3.
  * tr-181-2-4-0.xml: November 2011:
    - corresponds to TR-181 Issue 2 Amendment 4.
  * tr-181-2-5-0.xml: May 2012:
    - corresponds to TR-181 Issue 2 Amendment 5.
  * tr-181-2-6-0.xml: November 2012:
    - corresponds to TR-181 Issue 2 Amendment 6.
  * tr-181-2-7-0.xml: November 2013: January 17, 2014
    - corresponds to TR-181 Issue 2 Amendment 7.
  * tr-181-2-8-0.xml: 8 September 2014: 17 September 2014:
    - corresponds to TR-181 Issue 2 Amendment 8.
  * tr-181-2-9-0.xml:  1 December 2014:  4 February 2015:
    - Added WiFi MAC Address Filtering
    - Added Traceroute fixes
    - Added IEEE 1905 data model
    - Incorporated TR-143a1
  * tr-181-2-10-0.xml: 9 November 2015: 13 November 2015:
    - corresponds to TR-181 Issue 2 Amendment 10.
  * tr-181-2-11-0.xml: TBD, TBD
    - corresponds to TR-181 Issue 2 Amendment 11.
  * tr-181-2-12-0.xml: TBD, TBD
    - corresponds to TR-181 Issue 2 Amendment 12.
-->

<dm:document xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-6"
             xmlns:dmr="urn:broadband-forum-org:cwmp:datamodel-report-0-1"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="urn:broadband-forum-org:cwmp:datamodel-1-6
                           http://www.broadband-forum.org/cwmp/cwmp-datamodel-1-6.xsd
                        urn:broadband-forum-org:cwmp:datamodel-report-0-1
                           http://www.broadband-forum.org/cwmp/cwmp-datamodel-report.xsd"
             spec="urn:broadband-forum-org:tr-181-2-12-0" file="tr-181-2-12-0.xml">

  <description>
    {{docname|Device:2 Root Data Model for TR-069}}
    {{appdate|TBD}}
    {{trname|TR-181i2a12}}
    * TBD
  </description>

  <import file="tr-069-1-6-biblio.xml" spec="urn:broadband-forum-org:tr-069-1-6"/>

  <import file="tr-106-1-1-types.xml" spec="urn:broadband-forum-org:tr-106-1-1">
    <dataType name="Alias"/>
    <dataType name="IPAddress"/>
    <dataType name="StatsCounter32"/>
    <dataType name="StatsCounter64"/>
  </import>

  <import file="tr-181-2-11.xml" spec="urn:broadband-forum-org:tr-181-2-11">
    <model name="Device:2.11"/>
  </import>

  <import file="il-181-L2TPv3.xml" spec="urn:broadband-forum-org:il-181-L2TPv3">
    <component name="IL-181-L2TPv3"/>
  </import>
  
  <import file="il-181-VXLAN.xml" spec="urn:broadband-forum-org:il-181-VXLAN">
    <component name="IL-181-VXLAN"/>
  </import>
  
  <import file="il-181-LMAP.xml" spec="urn:broadband-forum-org:il-181-LMAP">
    <component name="IL-181-LMAP"/>
  </import>
  
  <bibliography>
    <reference id="ETSIBRAN">
      <name>ETSI EN 301 893</name> 
      <title>Broadband Radio Access Networks (BRAN); 5 GHz high performance RLAN; Harmonized EN covering the essential requirements of article 3.2 of the RTTE Directive</title>
      <organization>ETSI</organization> 
      <hyperlink>http://www.etsi.org/deliver/etsi_en/301800_301899/301893/01.08.01_60/en_301893v010801p.pdf</hyperlink> 
    </reference>
    <reference id="RFC6762">
      <name>RFC 6762</name>
      <title>Multicast DNS</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>February 2013</date>
    </reference>
    <reference id="TR-369">
      <name>WT-369</name>
      <title>User Services Platform</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2016</date>
    </reference>
  </bibliography>

  <component name="BootEvent">
    <event name="Boot!">
      <description>
        Boot event maybe requested via a USP operation.
      </description>
      <parameter name="CommandKey">
        <description>
          The ''command_key'' supplied when requesting the boot, or {{empty}} if the boot was not requested via a USP operation.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Cause">
        <description>
          The cause of the boot.
        </description>
        <syntax>
          <string>
            <enumeration value="LocalReboot"/>
            <enumeration value="RemoteReboot"/>
            <enumeration value="LocalFactoryReset"/>
            <enumeration value="RemoteFactoryReset"/>
          </string>
        </syntax>
      </parameter>
      <object name="Parameter.{i}." minEntries="0" maxEntries="unbounded">
        <description>
          Boot parameters configured via the recipient Controller's {{object|.LocalAgent.Controller.{i}.BootParameter}} table.
          {{issue|Currently event argument tables don't have unique keys, but why not? {{param|Path}} should be a unique key?}}
          {{issue|There are several references (elsewhere in the data model) to the ''Boot Notification''. These need to be tidied up to refer to ``Boot!`` events.}}
          {{issue|Given that a ''Boot!'' event can occur in multiple places in the data model, what ''is'' a "``Boot!`` event"? Is it any event defined via this ``BootEvent`` component?}}
        </description>
        <uniqueKey functional="true">
          <parameter ref="Path"/>
        </uniqueKey>
        <parameter name="Path">
          <description>
            Full parameter path.
          </description>
          <syntax>
            <string/>
          </syntax>
        </parameter>
        <parameter name="Value">
          <description>
            Parameter value (as a string).
          </description>
          <syntax>
            <string/>
          </syntax>
        </parameter>
      </object>
    </event>
  </component>

  <component name="PeriodicEvent">
    <event name="Periodic!">
      <description>
        Periodic event configured via the recipient Controller's {{param|Controller.{i}.PeriodicNotifInterval}} and {{param|Controller.{i}.PeriodicNotifTime}} parameters.
        {{issue|The configuration parameter names include ''Notif'' and their descriptions refer to notifications. Should fix these. Just drop ''Notif'' from the names?}}
      </description>
    </event>
  </component>

  <component name="TimerEvent">
    <event name="Timer!">
      <description>
        Timer event requested via a USP operation.
      </description>
      <parameter name="CommandKey">
        <description>
          The ''command_key'' supplied when requesting the timer event.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </event>
  </component>

  <component name="TransferCompleteEvent">
    <event name="TransferComplete!">
      <description>
        Transfer complete event for tranfer maybe requested via a USP operation.
        {{issue|Several arguments illustrate "parameter defaults". These haven't yet been discussed.}}
        {{issue|Several argument descriptions were taken from CWMP TransferComplete.}}
      </description>
      <parameter name="CommandKey">
        <description>
          The ''command_key'' supplied when requesting the transfer, or {{empty}} if the transfer was not requested via a USP operation.
        </description>
        <syntax>
          <string/>
          <default type="parameter" value=""/>
        </syntax>
      </parameter>
      <parameter name="TransferType">
        <description>
          The type of transfer.
        </description>
        <syntax>
          <string>
            <enumeration value="Download"/>
            <enumeration value="Upload"/>
            <enumeration value="Install"/>
            <enumeration value="Update"/>
            <enumeration value="Uninstall">
              <description>
                {{issue|An uninstall isn't really a "transfer".}}
              </description>
            </enumeration>
          </string>
          <default type="parameter" value="Download"/>
        </syntax>
      </parameter>
      <parameter name="FileType">
        <description>
          An integer followed by a space followed by the file type description. Only the following values are currently defined for the {{param}} argument:
          {{enum}}
          The following format is defined to allow the unique definition of vendor-specific file types:
          * "X &lt;VENDOR&gt; &lt;Vendor-specific identifier&gt;"
          ...
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
            <enumeration value="1 Firmware Upgrade Image"/>
            <enumeration value="2 Web Content"/>
            <enumeration value="3 Vendor Configuration File"/>
            <enumeration value="4 Tone File"/>
            <enumeration value="5 Ringer File"/>
          </string>
          <default type="parameter" value="1 Firmware Upgrade Image"/>
        </syntax>
      </parameter>
      <parameter name="TransferURL">
        <description>
          The URL from or to which this transfer was performed, or {{empty}} if no such URL is available.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
          <default type="parameter" value=""/>
        </syntax>
      </parameter>
      <parameter name="StartTime">
        <description>
          The date and time transfer was started in UTC...
        </description>
        <syntax>
          <dateTime/>
          <default type="parameter" value="0001-01-01T00:00:00Z"/>
        </syntax>
      </parameter>
      <parameter name="CompleteTime">
        <description>
          The date and time the transfer was fully completed and applied in UTC...
        </description>
        <syntax>
          <dateTime/>
          <default type="parameter" value="0001-01-01T00:00:00Z"/>
        </syntax>
      </parameter>
      <parameter name="Requestor">
        <description>
          ID of Controller that requested the transfer, or {{empty}} if no Controller requested it.
          {{issue|This is called ''operation_source'' in the protobuf schema.}}
        </description>
        <syntax>
          <string/>
          <default type="parameter" value=""/>
        </syntax>
      </parameter>
      <parameter name="FaultCode">
        <description>
          The numerical fault code as defined in...
          {{issue|This is what it's called in CWMP TransferComplete. It's called ''xfer_err.err_code'' in the protobuf schema.}}
        </description>
        <syntax>
          <unsignedInt/>
          <default type="parameter" value="0"/>
        </syntax>
      </parameter>
      <parameter name="FaultString">
        <description>
          A human-readable text description of the fault. This field SHOULD be {{empty}} if the {{param|FaultCode}} equals 0 (zero).
          {{issue|This is what it's called in CWMP TransferComplete. It's called ''xfer_err.err_msg'' in the protobuf schema.}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="parameter" value=""/>
        </syntax>
      </parameter>
    </event>
  </component>

  <component name="WakeUpEvent">
    <event name="WakeUp!">
      <description>
        Wake-up event.
        {{issue|This is referred to in various places as both ''Wakeup'' and ''WakeUp''. Given that the English word is ''wake-up'' (hyphenated), ''WakeUp'' is better? Let's decide...}}
      </description>
    </event>
  </component>

  <component name="LwNotifTrigger">
    <object base="ManagementServer." access="readOnly" minEntries="1" maxEntries="1">
      <parameter name="LightweightNotificationTriggerInterval" access="readWrite" dmr:previousParameter="LightweightNotificationProtocolsUsed">
        <description>
      The duration in {{units}} of the interval for which the CPE MUST attempt to deliver any pending Passive Lightweight Notifications.
      A value of 0 means that the trigger interval is effectively disabled. In this case pending Passive Lightweight Notifications are only sent when triggered by an Active Lightweight Notification.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LightweightNotificationTriggerTime" access="readWrite">
        <description>
      An absolute time reference in UTC to determine when the CPE will initiate the Lightweight Notification (in the case that there are pending Passive Lightweight Notifications that need to be delivered). Each Passive Lightweight Notification (that is waiting for the Lightweight Notification Trigger mechanism for delivery) MUST occur at this reference time plus or minus an integer multiple of the {{param|LightweightNotificationTriggerInterval}}. {{param}} is used only to set the ''phase'' of the Passive Lightweight Notification. The actual value of {{param}} can be arbitrarily far into the past or future.
      For example, if {{param|LightweightNotificationTriggerInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then Lightweight Notifications for pending Passive Lightweight Notifications will occur every day at UTC midnight. These MUST begin on the very next midnight, even if {{param}} refers to a day in the future. The Unknown Time value defined in {{bibref|TR-106a2|section 3.2}} indicates that no particular time reference is specified. That is, the CPE MAY locally choose the time reference, and needs only to adhere to the specified {{param|LightweightNotificationTriggerInterval}}. If absolute time is not available to the CPE, its Lightweight Notifications behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="WildcardSupport">
    <object base="ManagementServer." access="readOnly" minEntries="1" maxEntries="1">
      <parameter name="InstanceWildcardsSupported" access="readOnly">
        <description>
        Indicates whether or not instance wildcards are supported.
        A {{true}} value indicates that the CPE supports instance wildcards for GPV, GPN and GPA RPC calls, as defined in [TR-069a6].
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="RebootCommand">
    <command name="Reboot()">
      <description>
        Reboot the entity associated with the containing {{object}}.
      </description>
    </command>
  </component>
  
  <component name="FactoryResetCommand">
    <command name="FactoryReset()">
      <description>
        Factory reset the entity associated with the containing {{object}}.
      </description>
    </command>
  </component>
  
  <component name="ScheduleTimerCommand">
    <command name="ScheduleTimer()">
      <description>
        Schedule a ''Timer!'' event on the associated {{object}}.
        {{issue|Is it obvious that this should be a synchronous command that requests a ''Timer!'' event rather than an asynchronous command (perhaps with ''persist''={{true}}) that delivers ''OperationComplete'' on completion? I feel that we haven't got the relationship between (unsolicited) events and (solicited) asynchronous command completion quite right yet.}}
        {{issue|It will be quite common for commands to be associated with events (sometimes the relationship will be 1:n, e.g. multiple commands currently make use of the ''TransferComplete!'' event). Should this relationship be formally indicated in the data model?}}
      </description>
      <input>
        <parameter name="DelaySeconds">
          <description>
            The number of seconds from the time this method is called to the time the CPE is requested to initiate a one-time...
            {{issue|CWMP ''ScheduleInform'' uses ''DelaySeconds'', but should this use an absolute time?}}
          </description>
          <syntax>
            <unsignedInt>
              <range minInclusive="1"/>
              <units value="seconds"/>
            </unsignedInt>
            <default type="parameter" value="0"/>
          </syntax>
        </parameter>
      </input>
    </command>
  </component>

  <component name="FirmwareManagement">
    <parameter name="FirmwareImageNumberOfEntries" access="readOnly" dmr:previousParameter="FirstUseDate">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>

    <object name="FirmwareImage.{i}." access="readOnly" numEntriesParameter="FirmwareImageNumberOfEntries"  minEntries="0" maxEntries="unbounded">
      <description>
        Top-level object for mapping firmware images.
        This is a static table – the number of object instances in this table is defined by the firmware that is currently running.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
        <parameter ref="Version"/>
      </uniqueKey>

      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly">
        <description>
          Firmware/software image name. Descriptive text of the image or filename.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly">
        <description>
          A string identifying the version of the firmware image represented by this object. Whenever this firmware image is active (ie, the device has booted this firmware image), the value of the {{param|.DeviceInfo.SoftwareVersion}} parameter MUST be the same as the value contained in this parameter.
          To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation. For example, 3.0.21 where the components mean: ''Major.Minor.Build''.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Enabled" access="readWrite">
        <description>
          Specifies whether this particular firmware image can be used by the CPE or not. A CPE will only attempt to boot this particular firmware image if this parameter value is set to 'true'.
          This value MUST be set to 'true' whenever a new firmware image is installed.
          This value cannot be set to 'false' if the firmware image is active or is referenced by the {{param|#.BootFirmwareImage}} parameter.
          Firmware image instances cannot be deleted, so an ACS MAY use this parameter to subsequently mark a particular firmware as being invalid, which will prevent the CPE from attempting to boot it.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly">
        <description>
          Status of the firmware image, as determined by the CPE. {{enum}}
          NOTE: The {{enum|NoImage}} value could happen on a CPE that supports multiple firmware images, but only has a single image installed.
        </description>
        <syntax>
          <string>
            <enumeration value="NoImage">
              <description>
                This Firmware Image instance is empty.
              </description>
            </enumeration>
            <enumeration value="Downloading">
              <description>
                This Firmware Image instance is being downloaded.
              </description>
            </enumeration>
            <enumeration value="Validating">
              <description>
                This Firmware Image instance has been downloaded, and is in the process of being validated.
              </description>
            </enumeration>
            <enumeration value="Available">
              <description>
                This Firmware Image instance has been downloaded, validated, and installed, and is ready to be activated.
              </description>
            </enumeration>
            <enumeration value="DownloadFailed">
              <description>
                The CPE has attempted to download this Firmware Image instance, but ultimately failed while retrieving it from the source URL.
              </description>
            </enumeration>
            <enumeration value="ValidationFailed">
              <description>
                The CPE has attempted to validate a Firmware Image downloaded to this instance, but ultimately failed while validating it.
              </description>
            </enumeration>
            <enumeration value="InstallationFailed">
              <description>
                The CPE has attempted to install a Firmware Image downloaded and validated to this instance, but ultimately failed while installing it.
              </description>
            </enumeration>
            <enumeration value="ActivationFailed">
              <description>
                The CPE has attempted to active this Firmware Image instance, but ultimately failed while being activated.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="BootFailureLog" access="readOnly">
        <description>
          If the CPE is unable to boot into this firmware image, when specified, the CPE can use this parameter to record some information as to why the boot failed.
          If the CPE successfully boots into this firmware, the value of this parameter should be empty. When a new firmware image is installed into this object instance, this parameter MUST be cleared.
          The length of this string is defined as implementation-specific by the CPE.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <command name="Download()" async="true">
        <description>
          This command is issued to download a firmware into this Firmware Image instance.
          This is an asynchronous command and all results of the actual download will be contained within the TransferComplete event.
        </description>
        <input>
          <parameter name="CommandKey">
            <description>
              The string the CPE uses to refer to a particular download.
              The value of the CommandKey is entirely at the discretion of the management entity and MAY be an empty string.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="URL">
            <description>
              URL, as defined in RFC 3986 [ZZ], specifying the source file location. HTTP and HTTPS transports MUST be supported.
              If the CPE receives multiple download requests with the same source URL, the CPE MUST perform each download as requested, and MUST NOT assume that the content of the file to be downloaded is the same each time.
              This URL MUST NOT include the “userinfo” component, as defined in RFC 3986.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Username">
            <description>
              Username to be used by the CPE to authenticate with the file server. This string is set to the empty string if no authentication is required.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Password">
            <description>
              Password to be used by the CPE to authenticate with the file server. This string is set to the empty string if no authentication is required.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="FileSize">
            <description>
              The size of the file to be downloaded in bytes.
              The FileSize argument is intended as a hint to the CPE, which the CPE MAY use to determine if it has sufficient space for the file to be downloaded, or to prepare space to accept the file.
              The ACS MAY set this value to zero. The CPE MUST interpret a zero value to mean that that the ACS has provided no information about the file size. In this case, the CPE MUST attempt to proceed with the download under the presumption that sufficient space is available, though during the course of download, the CPE might determine otherwise.
              The ACS SHOULD set the value of this Parameter to the exact size of the file to be downloaded. If the value is non-zero, the CPE MAY reject the ScheduleDownload request on the basis of insufficient space.
              If the CPE attempts to proceed with the download based on the value of this argument, but the actual file size differs from the value of this argument, this could result in a failure of the download. However, the CPE MUST NOT cause the download to fail solely because it determines that the value of this argument is inaccurate.
            </description>
            <syntax>
              <unsignedInt/>
            </syntax>
          </parameter>
          <parameter name="TargetFileName">
            <description>
              The name of the file to be used on the target file system. This argument MAY be left empty if the target file name can be extracted from the downloaded file itself, or from the URL argument, or if no target file name is needed.
              If this argument is specified, but the target file name is also indicated by another source (for example, if it is extracted from the downloaded file itself), this argument MUST be ignored.
              If the target file name is used, the downloaded file would replace any existing file of the same name (whether or not the CPE archives the replaced file is a local matter).
              If present, this Parameter is treated as an opaque string with no specific requirements for its format. That is, the TargetFileName value is to be interpreted based on the CPE’s vendor-specific file naming conventions.
              Note that this specification does not preclude the use of a file naming convention in which the file’s path can be specified as part of the file name.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="CheckSumSHA1">
            <description>
              The SHA-1, as specified in RFC 3174 [ZZ]), hash value of the downloaded file used to validate the integrity of the downloaded file.
              If this argument is specified, the CPE MUST validate the integrity of the downloaded file by comparing the provided value against a SHA-1 hash of the downloaded file.
              If this argument is an empty string, the CPE MUST NOT perform a SHA-1 checksum validation of the downloaded file.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="SHA2Algorithm">
            <description>
              The SHA-2 hash algorithm to use when performing a SHA-2 checksum validation of the downloaded file.
              If this argument is specified, the CPE MUST validate the integrity of the downloaded file by comparing the provided value against a SHA-1 hash of the downloaded file.
              If this argument is an empty string, the CPE MUST NOT perform a checksum validation of the downloaded file.
            </description>
            <syntax>
              <string>
                <enumeration value="224"/>
                <enumeration value="256"/>
                <enumeration value="384"/>
                <enumeration value="512"/>
                <enumeration value="512_224"/>
                <enumeration value="512_256"/>
              </string>
            </syntax>
          </parameter>
          <parameter name="CheckSumSHA2">
            <description>
              The SHA-2, as specified in RFC 6234 [ZZ]),  hash value of the downloaded file used to validate the integrity of the downloaded file.
              If this argument is specified, the CPE MUST validate the integrity of the downloaded file by comparing the provided value against a SHA-2 (using the algorithm provided in the SHA2Algorthm argument) hash of the downloaded file.
              If this argument is an empty string, the CPE MUST NOT perform a SHA-2 checksum validation of the downloaded file.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
        </input>
      </command>
      <command name="Activate()" async="true">
        <description>
          This command is issued to activate a this Firmware Image instance.
          A Firmware Image instance can also be activated by setting the BootFirmwareImage parameter and causing the CPE to reboot.
          A successful activation will result in a reboot of the device, which will cause a Boot event.
          A failed activation will result in the BootFailureLog parameter in this Firmware Image instance being updated.
        </description>
        <input>
          <object name="TimeWindow.{i}." minEntries="1" maxEntries="5">
            <description>
              The time window(s) that dictate when the CPE activates the firmware image.
              A CPE MUST be able to accept a request with either one or two TimeWindow instances.
              The time windows MUST NOT overlap, i.e. if there are two time windows, the second window’s Start value has to be greater than or equal to the first window’s End value.
            </description>
            <parameter name="Start">
              <description>
                Start of this time window as an offset in seconds after invoking the command. An offset is used in order to avoid a dependence on absolute time.
              </description>
              <syntax>
                <unsignedInt/>
              </syntax>
            </parameter>
            <parameter name="End">
              <description>
                End of this time window as an offset in seconds after invoking the command. An offset is used in order to avoid a dependence on absolute time.
              </description>
              <syntax>
                <unsignedInt/>
              </syntax>
            </parameter>
            <parameter name="Mode">
              <description>
                Specifies when within this time window the CPE is permitted to activate the specified firmware image.
              </description>
              <syntax>
                <string>
                  <enumeration value="AnyTime">
                    <description>
                      The CPE MAY activate the firmware image at any time during the time window even if this results in interruption of service for the subscriber.
                    </description>
                  </enumeration>
                  <enumeration value="Immediately">
                    <description>
                      The CPE MUST activate the firmware image immediately at the start of the time window even if this results in interruption of service for the subscriber.
                    </description>
                  </enumeration>
                  <enumeration value="WhenIdle">
                    <description>
                      The CPE MUST NOT cause an interruption of service from the subscriber's standpoint while activating the firmware image during the time window.
                      How the CPE determines this is outside the scope of this specification.
                    </description>
                  </enumeration>
                  <enumeration value="ConfirmationNeeded">
                    <description>
                      The CPE MUST ask for and receive confirmation before activating the firmware image.
                      It is outside the scope of this specification how the CPE asks for and receives this confirmation.
                      If confirmation is not received, this time window MUST NOT be used.
                    </description>
                  </enumeration>
                </string>
              </syntax>
            </parameter>
            <parameter name="UserMessage">
              <description>
                A message to the user of the CPE, to inform him about a request to activate a new firmware image.
                The CPE MAY use this message when seeking confirmation from the user, e.g. when Mode is “ConfirmationNeeded".
                When there is no need for such a message, it SHOULD be empty and MUST be ignored
              </description>
              <syntax>
                <string/>
              </syntax>
            </parameter>
            <parameter name="MaxRetries">
              <description>
                The maximum number of retries for activating the firmware image before regarding the transfer as having failed. Refers only to this time window (each time window can specify its own value).
                A value of 0 means “No retries are permitted”. A value of -1 means “the CPE determines the number of retries”, i.e. that the CPE can use its own retry policy, not that it has to retry forever.
              </description>
              <syntax>
                <int>
                  <range minInclusive="-1" maxInclusive="10"/>
                </int>
              </syntax>
            </parameter>
          </object>
        </input>
      </command>
    </object>
  </component>

  <component name="VendorLogFileCommands">
    <object base="VendorLogFile.{i}." access="readOnly" minEntries="0" maxEntries="unbounded">
      <command name="Upload()" async="true">
        <description>
          This command is issued to upload the log file specified by this Vendor Log File instance.
          This is an asynchronous command and all results of the actual upload will be contained within the TransferComplete event.
        </description>
        <input>
          <parameter name="CommandKey">
            <description>
              The string the CPE uses to refer to a particular upload.
              The value of the CommandKey is entirely at the discretion of the management entity and MAY be an empty string.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="URL">
            <description>
              URL, as defined in RFC 3986 [ZZ], specifying the source file location. HTTP and HTTPS transports MUST be supported.
              If the CPE receives multiple upload requests with the same source URL, the CPE MUST perform each upload as requested, and MUST NOT assume that the content of the file to be uploaded is the same each time.
              This URL MUST NOT include the “userinfo” component, as defined in RFC 3986.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Username">
            <description>
              Username to be used by the CPE to authenticate with the file server. This string is set to the empty string if no authentication is required.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Password">
            <description>
              Password to be used by the CPE to authenticate with the file server. This string is set to the empty string if no authentication is required.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
        </input>
      </command>
    </object>
  </component>

  <component name="VendorConfigFileCommands">
    <object base="VendorConfigFile.{i}." access="readOnly" minEntries="0" maxEntries="unbounded">
      <command name="Backup()" async="true">
        <description>
          This command is issued to upload the configuration file specified by this Vendor Config File instance.
          This is an asynchronous command and all results of the actual upload will be contained within the TransferComplete event.
        </description>
        <input>
          <parameter name="CommandKey">
            <description>
              The string the CPE uses to refer to a particular upload.
              The value of the CommandKey is entirely at the discretion of the management entity and MAY be an empty string.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="URL">
            <description>
              URL, as defined in RFC 3986 [ZZ], specifying the source file location. HTTP and HTTPS transports MUST be supported.
              If the CPE receives multiple upload requests with the same source URL, the CPE MUST perform each upload as requested, and MUST NOT assume that the content of the file to be uploaded is the same each time.
              This URL MUST NOT include the “userinfo” component, as defined in RFC 3986.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Username">
            <description>
              Username to be used by the CPE to authenticate with the file server. This string is set to the empty string if no authentication is required.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Password">
            <description>
              Password to be used by the CPE to authenticate with the file server. This string is set to the empty string if no authentication is required.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
        </input>
      </command>
      <command name="Restore()" async="true">
        <description>
          This command is issued to download a configuration file into this Vendor Config File instance.
          This is an asynchronous command and all results of the actual download will be contained within the TransferComplete event.
        </description>
        <input>
          <parameter name="CommandKey">
            <description>
              The string the CPE uses to refer to a particular download.
              The value of the CommandKey is entirely at the discretion of the management entity and MAY be an empty string.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="URL">
            <description>
              URL, as defined in RFC 3986 [ZZ], specifying the source file location. HTTP and HTTPS transports MUST be supported.
              If the CPE receives multiple download requests with the same source URL, the CPE MUST perform each download as requested, and MUST NOT assume that the content of the file to be downloaded is the same each time.
              This URL MUST NOT include the “userinfo” component, as defined in RFC 3986.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Username">
            <description>
              Username to be used by the CPE to authenticate with the file server. This string is set to the empty string if no authentication is required.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Password">
            <description>
              Password to be used by the CPE to authenticate with the file server. This string is set to the empty string if no authentication is required.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="FileSize">
            <description>
              The size of the file to be downloaded in bytes.
              The FileSize argument is intended as a hint to the CPE, which the CPE MAY use to determine if it has sufficient space for the file to be downloaded, or to prepare space to accept the file.
              The ACS MAY set this value to zero. The CPE MUST interpret a zero value to mean that that the ACS has provided no information about the file size. In this case, the CPE MUST attempt to proceed with the download under the presumption that sufficient space is available, though during the course of download, the CPE might determine otherwise.
              The ACS SHOULD set the value of this Parameter to the exact size of the file to be downloaded. If the value is non-zero, the CPE MAY reject the ScheduleDownload request on the basis of insufficient space.
              If the CPE attempts to proceed with the download based on the value of this argument, but the actual file size differs from the value of this argument, this could result in a failure of the download. However, the CPE MUST NOT cause the download to fail solely because it determines that the value of this argument is inaccurate.
            </description>
            <syntax>
              <unsignedInt/>
            </syntax>
          </parameter>
          <parameter name="TargetFileName">
            <description>
              The name of the file to be used on the target file system. This argument MAY be left empty if the target file name can be extracted from the downloaded file itself, or from the URL argument, or if no target file name is needed.
              If this argument is specified, but the target file name is also indicated by another source (for example, if it is extracted from the downloaded file itself), this argument MUST be ignored.
              If the target file name is used, the downloaded file would replace any existing file of the same name (whether or not the CPE archives the replaced file is a local matter).
              If present, this Parameter is treated as an opaque string with no specific requirements for its format. That is, the TargetFileName value is to be interpreted based on the CPE’s vendor-specific file naming conventions.
              Note that this specification does not preclude the use of a file naming convention in which the file’s path can be specified as part of the file name.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="CheckSumSHA1">
            <description>
              The SHA-1, as specified in RFC 3174 [ZZ]), hash value of the downloaded file used to validate the integrity of the downloaded file.
              If this argument is specified, the CPE MUST validate the integrity of the downloaded file by comparing the provided value against a SHA-1 hash of the downloaded file.
              If this argument is an empty string, the CPE MUST NOT perform a SHA-1 checksum validation of the downloaded file.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="SHA2Algorithm">
            <description>
              The SHA-2 hash algorithm to use when performing a SHA-2 checksum validation of the downloaded file.
              If this argument is specified, the CPE MUST validate the integrity of the downloaded file by comparing the provided value against a SHA-1 hash of the downloaded file.
              If this argument is an empty string, the CPE MUST NOT perform a checksum validation of the downloaded file.
            </description>
            <syntax>
              <string>
                <enumeration value="224"/>
                <enumeration value="256"/>
                <enumeration value="384"/>
                <enumeration value="512"/>
                <enumeration value="512_224"/>
                <enumeration value="512_256"/>
              </string>
            </syntax>
          </parameter>
          <parameter name="CheckSumSHA2">
            <description>
              The SHA-2, as specified in RFC 6234 [ZZ]),  hash value of the downloaded file used to validate the integrity of the downloaded file.
              If this argument is specified, the CPE MUST validate the integrity of the downloaded file by comparing the provided value against a SHA-2 (using the algorithm provided in the SHA2Algorthm argument) hash of the downloaded file.
              If this argument is an empty string, the CPE MUST NOT perform a SHA-2 checksum validation of the downloaded file.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
        </input>
      </command>
    </object>
  </component>

  <component name="LocalAgent">
    <object name="LocalAgent." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        This object contains general information about the USP Agent itself.  For information related to the Device that hosts the Agent, please reference the {{object|.DeviceInfo}} object.
        NOTE: The Supported Data Model table ({{object|.DeviceInfo.SupportedDataModel}}) and Vendor Log File table ({{object|.DeviceInfo.VendorLogFile}}) details are located on the {{object|.DeviceInfo}} object.
      </description>
      <parameter name="EndpointID" access="readOnly">
        <description>
          The unique USP identifier for this USP Agent.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SoftwareVersion" access="readOnly">
        <description>
          The current USP Agent software version; not the version of the overall CPE  firmware, which is located in {{param|.DeviceInfo.SoftwareVersion}}.
          To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents  a more minor category of variation.  For example, ''3.0.21'' where the components mean: ''Major.Minor.Build''.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpTime" access="readOnly" activeNotify="canDeny">
        <description>
          Time in {{units}} since the USP Agent was last restarted (either via a reset of the software or reboot of the underlying device).
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <command name="SendOnboardRequest()">
        <description>
          Requests the Agent to send an ''OnBoardRequest'' notification to the originating Controller.
        </description>
      </command>
      <component ref="RebootCommand"/>
      <component ref="BootEvent"/>
      <component ref="FactoryResetCommand"/>
      <component ref="PeriodicEvent"/>
      <component ref="WakeUpEvent"/>
      <component ref="TransferCompleteEvent"/>
      <parameter name="SupportedProtocols" access="readOnly">
        <description>
          USP Message Transfer Protocols supported by this USP Agent.  The USP Agent MUST support at least one Protocol.
        </description>
        <syntax>
          <list minItems="1"/>
          <string>
            <enumeration value="CoAP"></enumeration>
            <enumeration value="HTTP"></enumeration>
            <!-- Removing the STOMP and XMPP MTPs for the initial Straw Ballot Version -->
            <!-- <enumeration value="STOMP"></enumeration> -->
            <!-- <enumeration value="XMPP"></enumeration> -->
          </string>
        </syntax>
      </parameter>
      <parameter name="AdvertisedDeviceSubtypes" access="readWrite">
        <description>{{list|each entry is a subtype component of the service type that is advertised for the device using mDNS as defined in {{bibref|RFC6762}}}}
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="MaxSubscriptionChangeAdoptionTime" access="readWrite">
        <description>
          The acceptable amount of time in {{units}} between the alteration of the Agent's Subscriptions (e.g. updated subscription, new subscription, removed subscription, etc.) and the notifications related to those subscriptions being delivered.
          For example, if this parameter is set to 30 {{units}}, then once a Subscription has been updated, the Agent has 30 {{units}} before it must start delivering notifications based on the updated version of the Subscription (instead of the old version of the Subscription).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="5"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MTPNumberOfEntries" access="readOnly">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>

    <object name="LocalAgent.MTP.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="MTPNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents a MTP used by a USP Endpoint.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly">
        <description>
          The current operational state of the {{object}} instance.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down">
              <description>Value when this {{object}} instance cannot establish communication.</description>
            </enumeration>
            <enumeration value="Error" optional="true">
              <description>Value when this {{object}} instance is misconfigured.</description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite">
        <description>
          The Message Transport Protocol (MTP) to be used for communications by a USP Endpoint.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="Device.LocalAgent.SupportedProtocols"/>
          </string>
          <default type="object" value="HTTP"></default>
        </syntax>
      </parameter>
      <parameter name="EnableMDNS" access="readWrite">
        <description>
          This parameter, when {{true}}, enables the advertisement of DNS-SD services defined for this {{object}} instance using mDNS as defined in {{bibref|RFC6762}}.
          This parameter cannot be set to {{true}} if there are multiple {{object}} instances with the same value of the {{param|Protocol}} parameter.
          When {{true}}, the hostname advertised in the SRV record MUST be a Fully Qualified Domain Name (FQDN).
          The interfaces that advertise these DNS-SD services are restriced to the set of interfaces associated with {{object}} instance and the interfaces defined by the {{param|##.DNS.SD.AdvertisedInterfaces}} parameter.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"></default>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="RemoteAgentTable">
    <parameter name="RemoteAgentNumberOfEntries" access="readOnly">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>
    
    <object name="RemoteAgent.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
      numEntriesParameter="RemoteAgentNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents a USP RemoteAgent that communicates access with this USP Controller.
      </description>
      <uniqueKey functional="true">
        <parameter ref="EndpointID"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="EndpointID" access="readWrite">
        <description>
          The unique USP identifier for this USP RemoteAgent.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="ProvisioningCode" access="readWrite">
        <description>
          Identifying information which MAY be used by the {{object}} instance to determine {{object}} instance specific customization and provisioning parameters.
        </description>
        <syntax>
          <string><size maxLength="64"/></string>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this {{object}} instance.
          When {{false}}, messages are not sent to the remote endpoint represented by this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
 
      <parameter name="MTPNumberOfEntries" access="readOnly">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    
    <object name="RemoteAgent.{i}.MTP.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
      numEntriesParameter="MTPNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents a MTP used by a USP Endpoint.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite">
        <description>
          The Message Transport Protocol (MTP) to be used for communications by a USP Endpoint.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="Device.LocalAgent.SupportedProtocols"/>
          </string>
          <default type="object" value="HTTP"></default>
        </syntax>
      </parameter>
    </object>
    <object name="RemoteAgent.{i}.MTP.{i}.CoAP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the CoAP Message Transport Protocol (MTP), then this object contains CoAP specific configuration parameters.
      </description>
      <parameter name="Host" access="readWrite">
        <description>
          The hostname or IP Address of Controller's CoAP server.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite">
        <description>
          The port number used by the Controller's CoAP Server to receive USP messages.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Path" access="readWrite">
        <description>
          The path that is used by the Controller's CoAP Server in order to receive USP messages.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="EnableEncryption" access="readWrite">
        <description>
          When, {{true}}, encryption is used as specified in {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ValidatePeerCertficate" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|EnableEncryption}} is {{true}}, then certificates presented by peers are validated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="CheckPeerID" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|ValidatePeerCertficate}} is {{true}}, the certificates presented by peers are authenticated as defined in
          {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="RemoteAgent.{i}.MTP.{i}.HTTP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the HTTP Message Transport Protocol (MTP), then this object contains HTTP specific configuration parameters.
      </description>
      
      <parameter name="Host" access="readWrite">
        <description>
          The hostname or IP Address of Controller's HTTP server.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite">
        <description>
          The port number used by the Controller's HTTP Server to receive USP messages.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Path" access="readWrite">
        <description>
          The path that is used by the Controller's HTTP Server in order to receive USP messages.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="EnableEncryption" access="readWrite">
        <description>
          When, {{true}}, encryption is used as specified in {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ValidatePeerCertficate" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|EnableEncryption}} is {{true}}, then certificates presented by peers are validated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="CheckPeerID" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|ValidatePeerCertficate}} is {{true}}, the certificates presented by peers are authenticated as defined in
          {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="ControllerTable">
    <parameter name="ControllerNumberOfEntries" access="readOnly">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>

    <object name="Controller.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="ControllerNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents a USP Controller that has access to this USP Agent.
      </description>
      <uniqueKey functional="true">
        <parameter ref="EndpointID"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="EndpointID" access="readWrite">
        <description>
          The unique USP identifier for this USP Controller.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="ProvisioningCode" access="readWrite">
        <description>
          Identifying information which MAY be used by the {{object}} instance to determine {{object}} instance specific customization and provisioning parameters.
        </description>
        <syntax>
          <string><size maxLength="64"/></string>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this {{object}} instance.
          When {{false}}, messages (notifications) are not sent to the remote endpoint represented by this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="Role" access="readWrite">
        <description>{{list|each entry is a Role that is associated with this {{object}} instance}}
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PeriodicNotifInterval" access="readWrite">
        <description>
          If a Periodic Event Notification {{object|#.Subscription.}} instance is associated with this USP Controller, then this is the duration in {{units}} of the interval for which the USP Agent MUST attempt to issue a Periodic Notification to the USP Controller.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodicNotifTime" access="readWrite">
        <description>
          If a Periodic Event Notification {{object|#.Subscription.}} instance is associated with this USP Controller, then this is an absolute time reference in UTC to determine when the USP Agent will issue a Periodic Notification. Each Periodic Notification MUST occur at this reference time plus or minus an integer multiple of the {{param|PeriodicNotifInterval}}.
          {{param}} is used only to set the ''phase'' of the Periodic Event Notifications.  The actual value of {{param}} can be arbitrarily far into the  past or future.
          For example, if {{param|PeriodicNotifInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past,  present, or future) then Periodic Notifications will be sent every day at UTC midnight.  These MUST begin on the very next midnight, even if {{param}} refers to a day in the future.
          The Unknown Time value defined in {{bibref|TR-106a2|section 3.2}} indicates that no particular time reference is specified.  That is, the USP Agent MAY locally choose the time reference, and needs only to adhere to the specified {{param|PeriodicNotifInterval}}.
          If absolute time is not available to the USP Agent, its Periodic Notification behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="USPRetryMinimumWaitInterval" access="readWrite">
        <description>
          Configures the first retry wait interval, in {{units}}, as specified in {{bibref|TR-369|section Z.Z.Z}}.
          A value of 5 corresponds to the default behavior that is described in {{bibref|TR-369}}.
          The USP Agent MUST use a random value between {{param}}  and ({{param}} * {{param|USPRetryIntervalMultiplier}} / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a starting point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="USPRetryIntervalMultiplier" access="readWrite">
        <description>
          Configures the retry interval multiplier as specified in {{bibref|TR-369|section Z.Z.Z}}.
          This value is expressed in units of 0.001.  Hence the values of the multiplier range between 1.000 and 65.535.
          A value of 2000 corresponds to the default behavior that is described in {{bibref|TR-369}}.
          The USP Agent MUST use a random value between {{param|USPRetryMinimumWaitInterval}}  and ({{param|USPRetryMinimumWaitInterval}} *  {{param}} / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a  starting point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <component ref="ScheduleTimerCommand"/>
      <component ref="TimerEvent"/>
      <parameter name="BootParameterNumberOfEntries" access="readOnly">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MTPNumberOfEntries" access="readOnly">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>

    <object name="Controller.{i}.MTP.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="MTPNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents a MTP used by a USP Endpoint.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite">
        <description>
          The Message Transport Protocol (MTP) to be used for communications by a USP Endpoint.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="Device.LocalAgent.SupportedProtocols"/>
          </string>
          <default type="object" value="HTTP"></default>
        </syntax>
      </parameter>
    </object>

    <object name="Controller.{i}.TransferCompletePolicy." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        The policy defined in this object determines the conditions under which the USP Agent notifies a USP Controller, that has an appropriate Subscription, of the completion of file transfers.
      </description>
      <parameter name="ResultTypeFilter" access="readWrite">
        <description>
          Indicates the transfer results that MUST be included when the USP Agent notifies a USP Controller of file transfers.  Transfer results omitted from this list MUST NOT be included when the USP Agent notifies a USP Controller.
        </description>
        <syntax>
          <string>
            <enumeration value="Success">
              <description>
                The autonomous file transfer completed successfully; i.e., the FaultCode was zero
              </description>
            </enumeration>
            <enumeration value="Failure">
              <description>
                The autonomous file transfer did not complete successfully; i.e., the FaultCode was non-zero
              </description>
            </enumeration>
            <enumeration value="Both">
              <description>
                Success and Failure
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>



    <object name="Controller.{i}.BootParameter.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="BootParameterNumberOfEntries" enableParameter="Enable">
      <description>
        This table provides the Controller with the ability to dictate the Parameters that are delivered by the Boot Notification.
        Any Parameter (identified by {{param|ParameterName}}) contained in this table MUST be included within the param_map element of the Boot Notification.
      </description>
      <uniqueKey>
        <parameter ref="ParameterName"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enables or disables this {{object}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ParameterName" access="readWrite">
        <description>
          A pattern that describes the Parameter(s) to be included in the param_map element of the Boot Notification.  Specifically, patterns with wildcards (an "*" character) in place of Instance Identifiers are allowed.
          If the pattern does not match any existing Parameters at the time that the Agent is creating the Boot Notification, then this {{object|#.BootParameter}} instance is not included in the param_map of the Boot Notification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="CoAP">
    <object name="MTP.{i}.CoAP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the CoAP Message Transport Protocol (MTP), then this object contains CoAP specific configuration parameters.
      </description>
      <parameter name="Interfaces" access="readWrite">
        <description>
      {{reference|the {{object|###.IP.Interface}} object instance to which this server will use as its host address to receive USP messages}}
      An {{empty}} will bind this server to all interfaces for this device.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="###.IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite">
        <description>
          The port number used by the CoAP Server to receive USP messages.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="5683"></default>
        </syntax>
      </parameter>
      <parameter name="Path" access="readWrite">
        <description>
          The path that is used by the CoAP Server in order to receive USP messages.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="IsEncrypted" access="readOnly">
        <description>
          This parameter represents whether or not communications that utilize this {{object}} object instance are encrypted or not.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EnableEncryption" access="readWrite">
        <description>
          When, {{true}}, encryption is used for this MTP instance.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ValidatePeerCertficate" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|EnableEncryption}} is {{true}}, then certificates presented by peers are validated.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
    </object>

    <object name="Controller.{i}.MTP.{i}.CoAP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the CoAP Message Transport Protocol (MTP), then this object contains CoAP specific configuration parameters.
      </description>
      <parameter name="Host" access="readWrite">
        <description>
          The hostname or IP Address of Controller's CoAP server.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite">
        <description>
          The port number used by the Controller's CoAP Server to receive USP messages.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Path" access="readWrite">
        <description>
          The path that is used by the Controller's CoAP Server in order to receive USP messages.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="EnableEncryption" access="readWrite">
        <description>
          When, {{true}}, encryption is used as specified in {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ValidatePeerCertficate" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|EnableEncryption}} is {{true}}, then certificates presented by peers are validated.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="CheckPeerID" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|ValidatePeerCertficate}} is {{true}}, the certificates presented by peers are authenticated as defined in
          {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    
 
    
  </component>



  <component name="HTTP">
    <object name="MTP.{i}.HTTP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the HTTP Message Transport Protocol (MTP), then this object contains HTTP specific configuration parameters.
      </description>
      <parameter name="Interfaces" access="readWrite">
        <description>
      {{reference|the {{object|###.IP.Interface}} object instance to which this server will use as its host address to receive USP messages}}
      An {{empty}} will bind this server to all interfaces for this device.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="###.IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite">
        <description>
          The port number used by the HTTP Server to receive USP messages.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="7547"></default>
        </syntax>
      </parameter>
      <parameter name="Path" access="readWrite">
        <description>
          The path that is used by the HTTP Server in order to receive USP messages.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="IsEncrypted" access="readOnly">
        <description>
          This parameter represents whether or not communications that utilize this {{object}} object instance are encrypted or not.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EnableEncryption" access="readWrite">
        <description>
          When, {{true}}, encryption is used for this MTP instance.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ValidatePeerCertficate" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|EnableEncryption}} is {{true}}, then certificates presented by peers are validated.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="CompressionSupported" access="readOnly">
        <description>
          Indicates the HTTP Compression mechanism(s) supported by this CPE.  Requirements for the use of HTTP Compression for CWMP can be found in {{bibref|TR-069a5|Section 3.4.7}}. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a7|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="GZIP">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
            <enumeration value="Compress">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
            <enumeration value="Deflate">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Compression" access="readWrite">
        <description>
          The value of this parameter represents the HTTP Compression mechanism to be used by the CPE when communicating with the ACS.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="CompressionSupported" nullValue="Disabled"/>
          </string>
          <default type="factory" value="Disabled"/>
        </syntax>
      </parameter>
    </object>

    <object name="Controller.{i}.MTP.{i}.HTTP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the HTTP Message Transport Protocol (MTP), then this object contains HTTP specific configuration parameters.
      </description>

      <parameter name="Host" access="readWrite">
        <description>
          The hostname or IP Address of Controller's HTTP server.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite">
        <description>
          The port number used by the Controller's HTTP Server to receive USP messages.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Path" access="readWrite">
        <description>
          The path that is used by the Controller's HTTP Server in order to receive USP messages.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="EnableEncryption" access="readWrite">
        <description>
          When, {{true}}, encryption is used as specified in {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ValidatePeerCertficate" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|EnableEncryption}} is {{true}}, then certificates presented by peers are validated.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="CheckPeerID" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|ValidatePeerCertficate}} is {{true}}, the certificates presented by peers are authenticated as defined in
          {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    
   
    
  </component>

  <component name="STOMP">
    <object name="MTP.{i}.STOMP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the STOMP Message Transport Protocol (MTP), then this object contains STOMP specific configuration parameters to which the USP Endpoint would attach.
      </description>

      <parameter name="Reference" access="readWrite">
        <description>
          A reference to the STOMP Connection used by this Agent when communicating via the STOMP MTP.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".STOMP.Connection." targetType="row"/>
          </string>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="Destination" access="readWrite">
        <description>
          The STOMP destination where the Agent will be listening to incoming USP messages.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
    </object>


    <object name="Controller.{i}.MTP.{i}.STOMP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the STOMP Message Transport Protocol (MTP), then this object contains STOMP specific configuration parameters to which the USP Endpoint would attach.
      </description>

      <parameter name="Reference" access="readWrite">
        <description>
          A reference to the STOMP Connection used by this Controller when communicating via the STOMP MTP.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".STOMP.Connection." targetType="row"/>
          </string>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="Destination" access="readWrite">
        <description>
          The STOMP destination where the Controller will be listening to incoming USP messages.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="XMPP">
    <object name="MTP.{i}.XMPP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the XMPP Message Transport Protocol (MTP), then this object contains XMPP specific configuration parameters to which the USP Endpoint would attach.
      </description>

      <parameter name="Reference" access="readWrite">
        <description>
          A reference to the XMPP Connection used by this Agent when communicating via the XMPP MTP.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".XMPP.Connection." targetType="row"/>
          </string>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
    </object>


    <object name="Controller.{i}.MTP.{i}.XMPP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the XMPP Message Transport Protocol (MTP), then this object contains XMPP specific configuration parameters to which the USP Endpoint would attach.
      </description>

      <parameter name="Reference" access="readWrite">
        <description>
          A reference to the XMPP Connection used by the Agent to contact this Controller when communicating via the XMPP MTP.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".XMPP.Connection." targetType="row"/>
          </string>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="JabberID" access="readWrite">
        <description>
          The Controller XMPP JabberID
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="StompConnection">
    <object name="STOMP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        The {{object}} represents the STOMP capabilities of the device as described in {{bibref|TR-369}}.
      </description>

      <parameter name="ConnectionNumberOfEntries" access="readOnly">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>

    <object name="STOMP.Connection.{i}." access="readWrite" minEntries="0" maxEntries="unbounded" enableParameter="Enable" numEntriesParameter="ConnectionNumberOfEntries">
      <description>
        The {{object}} represents a STOMP connection between the Agent and a STOMP server.
      </description>
      <uniqueKey>
        <parameter ref="Host"/>
        <parameter ref="Username"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enables or disables this {{object}}.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly">
        <description>
          The current operational state of this {{object}} (see {{bibref|TR-181i2|Section 4.2.2}}).  {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Disabled}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Enabled}} if and only if the interface is able to transmit and receive PDUs; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Enabled}} if still operable when the expected actions have completed);  it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
        </description>
        <syntax>
          <string>
            <enumeration value="Enabled"/>
            <enumeration value="Disabled"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="Connecting"/>
            <enumeration value="ServerNotPresent"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error_AuthenticationFailure"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChangeDate" access="readOnly">
        <description>
          The date and time at which this {{object}} entered into its current operational state.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite">
        <description>
          The hostname or IP Address of the STOMP Server.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite">
        <description>
          The port number of the STOMP Server.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="61613"></default>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite">
        <description>
          The username part of the credentials to be used when authenticating this {{object}} during connection establishment with the STOMP Server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite">
        <description>
          The password part of the credentials to be used when authenticating this {{object}} during connection establishment with the STOMP Server.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VirtualHost" access="readWrite">
        <description>
          The Virtual Host to use when establishing the connection.
          Some STOMP Server implementations utilize virtual hosts to place a context around credentials, permissions, and internal resources.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="EnableHeartbeats" access="readWrite">
        <description>
          Enable or disable the STOMP Heart-beating mechanism as described in STOMP (for this {{object}}).
          When the STOMP Heart-beat mechanism is enabled, {{param|OutgoingHeartbeat}} and {{param|IncomingHeartbeat}} determine how the heart-beat header within the CONNECT frame is formatted.
          When the STOMP Heart-beat mechanism is disabled, {{param|OutgoingHeartbeat}} and {{param|IncomingHeartbeat}} are ignored and the CONNECT frame MUST NOT contain a heart-beat header element.
          {{issue|need a bibref for the STOMP specification}}
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="OutgoingHeartbeat" access="readWrite">
        <description>
          Represents the Outgoing heart-beat timing of the STOMP Heart-beating mechanism as described in STOMP (for this {{object}}).
          The Outgoing heart-beat represents what the sender of the frame can do.  A value of 0 means that it cannot send heart-beats.
          {{issue|need a bibref for the STOMP specification}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IncomingHeartbeat" access="readWrite">
        <description>
          Represents the Incoming heart-beat timing of the STOMP Heart-beating mechanism as described in STOMP (for this {{object}}).
          The Incoming heart-beat represents what the sender of the frame would like to get.  A value of 0 means that it does not want to receive heart-beats.
          {{issue|need a bibref for the STOMP specification}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ServerRetryInitialInterval" access="readWrite">
        <description>
          The maximum first reconnection wait interval, in {{units}}, as specified in WT-369.
          The Device MUST use a random value between ''0'' and {{param}} as the first reconnection wait interval.
          {{issue|Need a bibref to WT-369}}
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="60"/>
        </syntax>
      </parameter>
      <parameter name="ServerRetryIntervalMultiplier" access="readWrite">
        <description>
          The reconnection interval multiplier as specified in WT-369. This value is expressed in units of 0.001. Hence the values of the multiplier range between 1.000 and 65.535.
          For the ''n''th reconnection wait interval, the Device MUST use a random value, in ''seconds'', between ''0'' and {{param|ServerRetryInitialInterval}} * ({{param}} / 1000) ** (''n'' - ''1'').
          {{issue|Need a bibref to WT-369}}
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="2000"/>
        </syntax>
      </parameter>
      <parameter name="ServerRetryMaxInterval" access="readWrite">
        <description>
          The maximum reconnection wait interval, in {{units}}.
          If the ''n''th reconnection wait interval calculated from {{param|ServerRetryInitialInterval}} and {{param|ServerRetryIntervalMultiplier}} exceeds the value of this parameter, then the Agent MUST use the value of this parameter as the next reconnection wait interval.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="30720"/>
        </syntax>
      </parameter>
      <parameter name="IsEncrypted" access="readOnly">
        <description>
          This parameter represents whether or not communications that utilize this {{object}} object instance are encrypted or not.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EnableEncryption" access="readWrite">
        <description>
          When, {{true}}, encryption is used as specified in {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ValidatePeerCertficate" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|EnableEncryption}} is {{true}}, then certificates presented by peers are validated.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="CheckPeerID" access="readWrite">
        <description>
          When, {{true}}, and the value of {{param|ValidatePeerCertficate}} is {{true}}, the certificates presented by peers are authenticated as defined in
          {{bibref|TR-369|section xx}}.
        </description>
        <syntax>
          <boolean/>
           <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="Subscriptions">
    <parameter name="SubscriptionNumberOfEntries" access="readOnly">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>

    <object name="Subscription.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="SubscriptionNumberOfEntries" enableParameter="Enable">
      <description>
        A Subscription dictates how a USP Agent issues USP Notification Messages to a USP Controller.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="ID"/>
        <parameter ref="Recipient"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enables/disables this {{object}}.  A disabled entry MUST NOT be processed by the USP Agent.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ID" access="readWrite">
        <description>
          Unique identifier of the {{object}} itself, which is specific to the USP Controller that creates the instance of the {{object}}.
          This value is also populated in the subscription_id element of every Notification message sent from a USP Agent to a USP Controller.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Recipient" access="readOnly">
        <description>
          A reference to the {{object|#.Controller.{i}.}} instance that will receive the Notification associated with this {{object}}.
          The value of this parameter is automatically populated by the USP Agent upon {{object}} creation using the reference to the USP Controller that created the instance.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.Controller." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CreationDate" access="readOnly">
        <description>
          The date and time when this instance of {{object}} was created. This is internally used by the {{param|TimeToLive}} parameter to determine the expiration of this {{object}} instance.
          The value of this parameter is automatically populated by the USP Agent upon {{object}} creation.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="NotifType" access="readWrite">
        <description>
          Type of Notification message that will be sent to the USP Controller specified by {{param|Recipient}} when this {{object}} is triggered.
        </description>
        <syntax>
          <string>
            <enumeration value="ValueChange"/>
            <enumeration value="ObjectCreation"/>
            <enumeration value="OperationComplete"/>
            <enumeration value="Event"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ReferenceList" access="readWrite">
        <description>
          Each entry in the list is a parameter path that determines the element of the data model that the {{object}} is applicable to.
          Different values of the {{param|NotifType}} parameter will cause the {{object}} to interact with {{param}} differently.  For example, an instance of {{object}} with {{enum|ValueChange|NotifType}} will utilize the value of this parameter differently than an instance with {{enum|Event|NotifType}}.
          Expressions are allowed in the list items, but in some cases could cause a dynamic set of instances to be monitored in order to fulfill the Subscription's requirements.
          Once the value of the {{param}} is written, the value cannot be changed as the {{object}} instance is considered to be immutable. If the value of a non-empty {{param}} parameter needs to change, the {{object}} instance MUST be deleted and a new {{object}} instance created.
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Persistent" access="readWrite">
        <description>
          Determines whether or not this {{object}} remains after the USP Agent is restarted (either via a reset of the software or reboot of the underlying device).
          If {{true}}, this {{object}} stays in existence until either a Delete message removes it or the {{param|TimeToLive}} parameter expires.
          If {{false}}, this {{object}} is automatically removed by the USP Agent whenever it is restarted.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="TimeToLive" access="readWrite">
        <description>
          Specifies the duration of time (in {{units}}) that this {{object}} remains in existence.  After {{param}} has expired, this {{object}} instance is automatically removed by the USP Agent.
          If the value of {{param}} is 0, then this parameter is ignored and this {{object}} stays in existence until either a Delete message removes it or the {{param|Persistent}} parameter determines that it should be removed.
          If the value of {{param}} is greater than 0, then this parameter determines the length of time (from {{object}} creation) until it will be automatically removed by the USP Agent (unless the {{param|Persistent}} parameter is {{false}} and the USP Agent is restarted, in which case it will be removed before the {{param}} expiration).  NOTE: This paramater does not count down as time moves forward; it will always read back with the same value that it was last set to.
          If the USP Agent is incapable of maintaining absolute time then {{param}} will automatically expire if the USP Agent is restarted (either via a reset of the software or reboot of the underlying device) before {{param}} expiration.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="NotifRetry" access="readWrite">
        <description>
          Specifies whether or not the USP Agent attempts to re-deliver the Notification in the event that it could not be delivered to the USP Controller.
          When {{param}} is {{true}}, the USP Agent MUST retry the delivery of the Notification.  This implies that the Notification MUST be generated with the "send_resp" flag set to {{true}} such that they USP Agent knows when the Notification has been successfully delivered.
          When {{param}} is {{false}}, the USP Agent MUST NOT retry the delivery of the Notification, and SHOULD generate the notification with "send_resp" flag set to {{false}}.
          {{issue|Need to extend this description to talk about the retry algorithm}}
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="NotifExpiration" access="readWrite">
        <description>
          Specifies the duration of time (in {{units}}) that the Notification associated with this {{object}} will continue to be retried.  After {{param}} has expired, if the Notification has still not been successfully delivered then the USP Agent MUST stop attempting to re-deliver the Notification.
          If {{param|NotifRetry}} is set to {{false}} then this parameter is ignored.
          If {{param|NotifRetry}} is set to {{true}} and the value of {{param}} is 0, then the USP Agent will attempt to re-deliver the Notification until it has been successfully delivered or until the USP Agent is restarted (either via a reset of the software or reboot of the underlying device).
          If {{param|NotifRetry}} is set to {{true}} and the value of {{param}} is greater than 0, then the USP Agent will attempt to re-deliver the Notification until either it has been successfully delivered, until the length of time (from the time tha the Notification was initially attempted to be delivered) specified in this parameter expires, or until the USP Agent is restarted (either via a reset of the software or reboot of the underlying device).
          NOTE: This paramater does not count down as time moves forward; it will always read back with the same value that it was last set to.        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="0"></default>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="RemoteAgentTrust">
  <object base="RemoteAgent.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
    numEntriesParameter="RemoteAgentNumberOfEntries" enableParameter="Enable">
    <parameter name="Credential" access="readWrite" dmr:previousParameter="Role">
      <description>
        A reference to the {{object|#.Security.Certificate.{i}}} instance that represents a certificate authority (CA) for use in authenticating the identity of this {{object}} instance.
      </description>
      <syntax>
        <string>
          <pathRef refType="strong" targetParent="#.Security.Certificate." targetType="row"/>
        </string>
      </syntax>
    </parameter>
  </object>
  </component>

  <component name="ControllerTrust">

    <object name="ControllerTrust." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        This object contains information that an Agent applies when establishing a trust relationship with a Controller.
      </description>
      <parameter name="UntrustedRole" access="readWrite">
        <description>
          {{list|each entry is a Role that is associated with Controllers who's identity cannot be authenticated using the credentials in the {{object|Credential}} table}}
          In some instances, this policy is set by the Agent and cannot be modified by Controllers. If the Agent does not allow modification of this parameter, the Agent MUST respond with an error to the request to set this parameter.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="BannedRole" access="readWrite">
        <description>
          The Role that is associated with Controllers or with credentials in the {{object|Credential}} table to indicate banned access.
          When present in the {{object|Credential}} table, this value will be assigned to Controllers who present certificates that are authenticated using that entry in the {{object|Credential}} table.
          When assigned to a Controller or associated with an entry in the {{object|Credential}} table, this MUST be the only value in the Role list.
          The Agent SHOULD refuse to establish a secure USP session with any Controller that has this Role.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <command name="RequestChallenge()">
        <description>
          This command is issued to retrieve the instruction for the passed type of challenge.
        </description>
        <input>
          <parameter name="Alias">
            <description>
              The value of the Alias parameter in the challenge object instance that will be verified from the challenge response provided by the external party through the Controller.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
        </input>
        <output>
          <parameter name="Instruction">
            <description>
              The value of the Instruction parameter asscoiated with the requested challenge Alias.
            </description>
            <syntax>
              <base64/>
            </syntax>
          </parameter>
          <parameter name="ChallengeID">
            <description>
              The challenge identifier the Controller uses in the ChallengeResponse command to correlate this request with a response.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
        </output>
      </command>
      <command name="ChallengeResponse()">
        <description>
          This command is issued to return the response of challenge.
        </description>
        <input>
          <parameter name="ChallengeID">
            <description>
              The challenge identifier the Controller uses to correlate the challenge request with a response.
            </description>
            <syntax>
              <string/>
            </syntax>
          </parameter>
          <parameter name="Value">
            <description>
              The value of the challenge that is specific to the type of challenge. The challenge value is provided by the external party to the Controller.
            </description>
            <syntax>
              <base64/>
            </syntax>
          </parameter>
        </input>
        <output>
          <parameter name="Success">
            <description>
              When, {{true}}, the challenge was successfull.
            </description>
            <syntax>
              <boolean/>
            </syntax>
          </parameter>
        </output>
      </command>
      <parameter name="RoleNumberOfEntries" access="readOnly">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CredentialNumberOfEntries" access="readOnly">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ChallengeNumberOfEntries" access="readOnly">
        <description>{{numentries}}</description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>

    <object name="ControllerTrust.Role.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="RoleNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents the permissions that are extended to a set of Targets for a specified Role.
        If there are multiple entries in this table for a specific Role where the Targets overlap, the permissions for the entry with the highest value takes priority over all others.
        If multiple entries in this table contain a Target that evaluates to the same instantiated Object/Parameter for multiple Roles, then the permissions to be used are a union of the identified permissions.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="true">
        <parameter ref="Role"/>
        <parameter ref="Order"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="Role" access="readWrite">
        <description>
          The Role assigned to this {{object}} instance.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite">
        <description>
          The order (relative priority) to use when determining the permissions for overlapping Targets that have the same value of the {{param|Role}} parameter.
          The larger value of this parameter takes priority over a permission with a smaller value (i.e., 0 has the lowest priority).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"></default>
        </syntax>
      </parameter>
      <parameter name="Targets" access="readWrite">
        <description>
          {{list|each entry is a target to which the value of the permissions parameters are assigned}}
          When an entry is a value of a Partial Path, the permissions are associated to that Object and any child Object/Parameter.
          When the value of an entry is an Object instance then the permissions are associated to all Parameters of the Object instance.
          When an entry is a value of a Search Path as defined in {{bibref|TR-369}} that resolves to zero or more Parameter Paths, then all Parameter Paths that result from the evaluation of the Search Path are subject to the permissions assigned by this {{object}} instance.
        </description>
        <syntax>
          <list></list>
          <string>
          </string>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="ParameterPermissions" access="readWrite">
        <description>
          The permissions of a Role for the specified Targets.
          A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify).
          The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r--n).
          The following describes the meaning of the permissions for Parameter type of Targets:
          # Read: Grants the capability to read the value of the Parameter via Get.
          # Write: Grants the capability to update the value of the Parameter via Add or Set.
          # Execute: Grants no capabilities; Parameters can not be executed.
          # Notify: Grants the capability to use this Parameter in the ReferenceList of an Event or ValueChange Subscription.
        </description>
        <syntax>
          <string>
            <size minLength="4" maxLength="4"/>
          </string>
          <default type="object" value="----"></default>
        </syntax>
      </parameter>
      <parameter name="ObjectPermissions" access="readWrite">
        <description>
          The permissions of a Role for the specified Targets.
          A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify).
          The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r--n).
          The following describes the meaning of the permissions for Object type of Targets:
          # Read: Grants the capability to read the meta-information of the Object via GetObjects.
          # Write: Grants no capabilities for Static Objects. Grants the capability to create a new instance of a Multi-Instanced Object via Add (e.g. Device.LocalAgent.Controller.).
          # Execute: Grants the capability to execute Commands contained in this Object via Operate (this is a "traverse" permission).
          # Notify: Grants the capability to use this Object in the ReferenceList of an Event or ObjectCreation (for multi-instance objects only) Subscription.
        </description>
        <syntax>
          <string>
            <size minLength="4" maxLength="4"/>
          </string>
          <default type="object" value="----"></default>
        </syntax>
      </parameter>
      <parameter name="InstantiatedObjectPermissions" access="readWrite">
        <description>
          The permissions of a Role for the specified Targets.
          A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify).
          The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r--n).
          The following describes the meaning of the permissions for Instantiated Object type of Targets:
          # Read: Grants the capability to read the meta-information of the Instantiated Object via GetObjects.
          # Write: Grants the capability to remove an existing instance of an Instantiated Object via Delete (e.g. Device.LocalAgent.Controller.1.).
          # Execute: Grants the capability to execute Commands contained in this Instantiated Object via Operate (this is a "traverse" permission).
          # Notify: Grants the capability to use this Instantiated Object in the ReferenceList of an Event or ObjectDeletion Subscription.
        </description>
        <syntax>
          <string>
            <size minLength="4" maxLength="4"/>
          </string>
          <default type="object" value="----"></default>
        </syntax>
      </parameter>
      <parameter name="CommandEventPermissions" access="readWrite">
        <description>
          The permissions of a Role for the specified Targets.
          A string of 4 characters where each character represents a permission ("r" for Read, "w" for Write, "x" for Execute", and "n" for Notify).
          The string is always in the same order (rwxn) and the lack of a permission is signified by a "-" character (e.g., r--n).
          The following describes the meaning of the permissions for Command and Event type of Targets:
          # Read: Grants the capability to read the meta-information of the Command and Event via GetObjects.
          # Write: Grants no capabilities; Commands are executed instead of written to.
          # Execute: Grants the capability to execute the Command via Operate.
          # Notify: Grants the capability to use this Command in the ReferenceList of an Event or OperationComplete Subscription.
        </description>
        <syntax>
          <string>
            <size minLength="4" maxLength="4"/>
          </string>
          <default type="object" value="----"></default>
        </syntax>
      </parameter>
    </object>

    <object name="ControllerTrust.Credential.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="CredentialNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents a trusted credential. The credential can be that of a certificate authority (CA) for a Controller whose EndpointID is unknown.
        When a credential is supplied to the Agent by a Controller during authentication, the credentials in this table are used to determine if any of the supplied certificates (including those in the chain of trust) are considered "trusted".
        If the Controller authenticated via an entry in this table is not previously known to the Agent, the associated Role entry is automatically applied to the Controller.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="Role" access="readWrite">
        <description>
          {{nolist}}
          Comma-separated list of strings, the (set of) Role(s) applied to a Controller authenticated through this {{object}} instance.
          The roles are added to the Controller's current list of Roles.
          If the Controller is already known to the Agent, with an associated Role, this parameter has no impact.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Credential" access="readWrite">
        <description>
          A reference to the {{object|###.Security.Certificate.{i}}} instance for use in the authentication of certificates provided by a Controller.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="###.Security.Certificate." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>



    <object name="ControllerTrust.Challenge.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="ChallengeNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents information that is used to challenge a Controller in order to assign a Role to Controller or to determine the authenticity of a Certificate.
        The Controller requests a type of challenge from an Agent using the RequestChallenge command.
        The Agent returns the value of the {{param|Instruction}} for that type of challenge the Controller which the Controller then provides a third-party.
        The third-party responds to the Instruction to which the Controller sends to the Agent using the ChallengeResponse command.
        The Agent verifies the response to the Challenges and executes an implementation specific Agent logic in order to establish trust with the Controller.
        This could include (but is not limited to):
        *Assignment of the value of the {{param|Role}} parameter to the Controller
        *Use the Controller's certificate to which the challenge response was received in order to authenticate the identity of the Controller
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readWrite">
        <description>
          The description of this {{object}} instance.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Role" access="readWrite">
        <description>
          {{nolist}}
          Comma-separated list of strings, the (set of) Role(s) applied to a Controller when the challenge procedure succeeds.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite">
        <description>
          The type of challenge that will be verified from the challenge response provided by the external party through the Controller.
        </description>
        <syntax>
          <string>
            <enumeration value="Passphrase"><description>The challenge uses a passphrase the external party is expected to match.</description></enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite">
        <description>
          The value of the challenge that is specific to the type of challenge.
        </description>
        <syntax>
          <base64/>
        </syntax>
      </parameter>
      <parameter name="Instruction" access="readWrite">
        <description>
          The instruction that is provided to the external party by the Controller requesting the challenge.
        </description>
        <syntax>
          <base64/>
        </syntax>
      </parameter>
      <parameter name="Retries" access="readWrite">
        <description>
          The number of times a challenge is retried before the challenge procedure is terminated.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LockoutPeriod" access="readWrite">
        <description>
          The time, in {{units}} that a Controller that has failed the challenge is locked out (based on the value of the {{param|Retries}} parameter) prior to being provided the challenge again.
          A value of zero means that a LockoutPeriod doesn't apply and the challenge can be provided indefinitely.
        </description>
        <syntax>
          <int>
            <range minInclusive="0"/>
            <units value="seconds"/>
          </int>
          <default type="object" value="30"></default>
        </syntax>
      </parameter>
    </object>

    <object base="Controller.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="ControllerNumberOfEntries" enableParameter="Enable">
      <parameter name="Credential" access="readWrite" dmr:previousParameter="Role">
        <description>
          A reference to the {{object|##.Security.Certificate.{i}}} instance that represents a certificate authority (CA) for use in authenticating the identity of this {{object}} instance.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="##.Security.Certificate." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="Requests">
    <parameter name="RequestNumberOfEntries" access="readOnly">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>

    <object name="Request.{i}." access="readOnly" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="RequestNumberOfEntries">
      <description>
        {{object}} instances are created using USP ''Operate'' messages. Only ''Operate'' messages with ''async''=''true'' will create a {{object}} instance in the data model.
        When the command of the ''Operate'' completes, then this {{object}} instance is removed from this table.
      </description>

      <uniqueKey functional="true">
        <parameter ref="Originator"/>
        <parameter ref="Command"/>
        <parameter ref="CommandKey"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Originator" access="readOnly">
        <description>
          The USP Endpoint Identifier that originated the command.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Command" access="readOnly">
        <description>
          The command to be executed. This parameter is Path Name that address a Command of an Object or Object Instance.
          The command is an result of the evaluation of the ''command'' argument of an ''Operate'' message.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="CommandKey" access="readOnly">
        <description>
          The command key from the USP ''Operate'' message.
        </description>
        <syntax><string/></syntax>
      </parameter>
      <parameter name="Status" access="readOnly">
        <description>
          The operational status of the request to execute the command.
        </description>
        <syntax>
          <string>
            <enumeration value="Requested"><description>The command has been requested but is currently not executing.</description></enumeration>
            <enumeration value="Active"><description>The command is currently executing.</description></enumeration>
            <enumeration value="Canceling"><description>The command has been requested to be cancelled.</description></enumeration>
            <enumeration value="Canceled"><description>The command has successfully been cancelled.</description></enumeration>
            <enumeration value="Success"><description>The command has successfully been completed its execution.</description></enumeration>
            <enumeration value="Error"><description>The command has unsuccessfully completed its execution or has unsuccessfully been cancelled.</description></enumeration>
          </string>
        </syntax>
      </parameter>
      <command name="Cancel()">
        <description>
          Request cancellation of this {{object}}'s command.
          This command completes immediately. If successful, {{param|Status}} will immediately change to {{enum|Canceling|Status}} and will change to {{enum|Canceled|Status}} when the cancelation is complete.
        </description>
      </command>
    </object>
  </component>

  <component name="ProxiedDevices"></component>

  <component name="InternetOfThings"></component>

  <component name="StandbyCapabilities">
    <object name="Standby." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        Capabilities of a Device as it pertains to entering a standby state.
      </description>

      <parameter name="NetworkAware" access="readOnly">
        <description>
          Indicates that the CPE is capable of maintaining a network connection and responding to communications via the network connection while in a standby state.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TimerAware" access="readOnly">
        <description>
          Indicates that the CPE is capable of maintaining and responding to timers while in a standby state.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="DNS-SD">
    <object base="DNS.SD." access="readOnly" minEntries="1" maxEntries="1">
      <parameter name="AdvertisedInterfaces" access="readWrite">
        <description>
      {{reference|the {{object|##.IP.Interface}} object instance from which DNS-SD services are advertised}}
      If this parameter is not supported by an implementation then DNS-SD services are advertised on all LAN interfaces.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="##.IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
  </component>

  <model name="Device:2.12" base="Device:2.11">
    <object base="Device." access="readOnly" minEntries="1" maxEntries="1">
      <component ref="RebootCommand"/>
      <component ref="FactoryResetCommand"/>
    </object>

    <component path="Device." ref="LwNotifTrigger"/>
    <component path="Device." ref="WildcardSupport"/>
    <component path="Device." ref="RemoteAgentTable"/>
    <component path="Device." ref="RemoteAgentTrust"/>
    <component path="Device.DeviceInfo." ref="FirmwareManagement"/>
    <component path="Device.DeviceInfo." ref="VendorLogFileCommands"/>
    <component path="Device.DeviceInfo." ref="VendorConfigFileCommands"/>
    <component path="Device." ref="LocalAgent" dmr:previousObject="DeviceInfo."/>
    <component path="Device.LocalAgent." ref="ControllerTable"/>
    <component path="Device.LocalAgent." ref="CoAP"/>
    <component path="Device.LocalAgent." ref="HTTP"/>
    <!-- Removing the STOMP and XMPP MTPs for the initial Straw Ballot Version -->
    <!-- <component path="Device.LocalAgent." ref="STOMP"/> -->
    <!-- <component path="Device.LocalAgent." ref="XMPP"/> -->
    <component path="Device.LocalAgent." ref="Subscriptions"/>
    <component path="Device.LocalAgent." ref="Requests"/>
    <component path="Device.LocalAgent." ref="ControllerTrust"/>
    <component path="Device." ref="ProxiedDevices"/>
    <component path="Device." ref="InternetOfThings"/>
    <!-- Removing the STOMP MTP for the initial Straw Ballot Version -->
    <!-- <component path="Device." ref="StompConnection"/> -->
    <component path="Device." ref="StandbyCapabilities"/>
    <component path="Device." ref="DNS-SD"/>

    <object base="Device.DeviceInfo." access="readOnly" minEntries="1" maxEntries="1">
      <parameter base="SoftwareVersion" access="readOnly">
        <description action="append">
          For CPEs that support multiple firmware images, the value for this parameter MUST be the software version of the active firmware image.
        </description>
      </parameter>
      <parameter name="ActiveFirmwareImage" access="readOnly">
        <description>
          {{noreference}}A full path reference to the row in the {{object|FirmwareImage}} table representing the currently running firmware image.
        </description>
        <syntax>
          <string>
            <pathRef targetType="row" targetParent="FirmwareImage." refType="strong"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BootFirmwareImage" access="readWrite">
        <description>
          {{noreference}}A full path reference to the row in the {{object|FirmwareImage}} table of the firmware image that is to be loaded the next time the device boots.
          This parameter value cannot be empty and must point to a valid and enabled {{object|FirmwareImage}} object ({{param|FirmwareImage.{i}.Enabled}} parameter set to 'true'). Out of the factory, this parameter should be set to point to the firmware image the CPE will attempt to boot when first powered on.
          The firmware image instance referenced by this parameter must also have an Enabled parameter value of 'true'. Attempting to set this parameter to point to a non-enabled firmware image MUST result in the CPE responding with a CWMP fault (9007).
          In situations where the CPE cannot boot the firmware image specified by this parameter and manages to boot a different firmware image, the CPE MUST NOT modify this value to point to the alternate firmware image that is currently active.
        </description>
        <syntax>
          <string>
            <pathRef targetType="row" targetParent="FirmwareImage." refType="strong"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FriendlyName" access="readWrite">
        <description>The friendly name of the device.</description>
        <syntax>
          <string><size maxLength="32"></size></string>
        </syntax>
      </parameter>
    </object>

    <object base="Device.DSL.Line.{i}." access="readOnly" minEntries="0" maxEntries="unbounded">
      <parameter base="UpstreamAttenuation" access="readOnly">
        <description action="append">
          Doesn't apply to VDSL2 {{bibref|G.993.2}}. Otherwise has the same value as the single element of {{param|TestParams.SATNus}}.
        </description>
      </parameter>
      <parameter base="DownstreamAttenuation" access="readOnly">
        <description action="append">
          Doesn't apply to VDSL2 {{bibref|G.993.2}}. Otherwise has the same value as the single element of {{param|TestParams.SATNds}}.
        </description>
      </parameter>
    </object>

    <object base="Device.DSL.Line.{i}.TestParams." access="readOnly" minEntries="1" maxEntries="1">
      <parameter base="LATNds" access="readOnly" activeNotify="canDeny">
        <description action="replace">
          {{list}} Indicates the downstream line attenuation averaged across all sub-carriers in the frequency band, as computed during initialization.  Number  of elements is dependent on the number of downstream bands but will exceed one only for ITU-T G.993.2. Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="35"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter base="LATNus" access="readOnly">
        <description action="replace">
          {{list}} Indicates the upstream line attenuation averaged across all sub-carriers in the frequency band, as computed during initialization.  Number of  elements is dependent on the number of upstream bands but will exceed one only for ITU-T G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="35"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter base="SATNds" access="readOnly">
        <description action="replace">
          {{list}} Indicates the downstream signal attenuation averaged across all active sub-carriers in the frequency band, as computed during the L0 (i.e., Showtime)  state.  Number of elements is dependent on the number of downstream bands but will exceed one only for ITU-T G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="35"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter base="SATNus" access="readOnly">
        <description action="replace">
          {{list}} Indicates the upstream signal attenuation averaged across all active sub-carriers in the frequency band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for ITU-T G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="35"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>

    <object base="Device.SoftwareModules.ExecEnv.{i}." access="readOnly" minEntries="0" maxEntries="unbounded">
      <component ref="BootEvent" dmr:previousParameter="Reset"/>
      <component ref="TransferCompleteEvent"/>
    </object>

    <object base="Device.BulkData.Profile.{i}.HTTP." access="readOnly" minEntries="1" maxEntries="1">
        <parameter name="PersistAcrossReboot" access="readWrite">
            <description>
                Determines whether or not data transfers that have failed are required to be persisted across reboots.
                If {{param}} is {{true}}, then failed data transfers MUST be persisted across reboots.
                If {{param}} is {{false}}, then failed data transfers are not required to be persisted across reboots.
            </description>
            <syntax>
                <boolean/>
                <default type="object" value="false"></default>
            </syntax>
        </parameter>
    </object>

    <object base="Device.BulkData.Profile.{i}.HTTP.RequestURIParameter.{i}." access="readWrite" minEntries="0" maxEntries="unbounded">
      <parameter base="Reference" access="readWrite">
        <description action="replace">
          The value MUST be the path name of a parameter to be used as the Request-URI parameter.
          If the value of this parameter is empty, then this object is not encoded in the report header.
        </description>
      </parameter>
    </object>

    <object base="Device.WiFi.Radio.{i}." access="readOnly" numEntriesParameter="RadioNumberOfEntries" minEntries="0"  maxEntries="unbounded" dmr:fixedObject="true">
      <parameter base="OperatingChannelBandwidth" access="readOnly">
        <syntax>
          <string>
            <enumerationRef targetParam="SupportedOperatingChannelBandwidths"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedOperatingChannelBandwidths" access="readOnly" dmr:previousParameter="AutoChannelRefreshPeriod">
        <description>
          {{list}}  These are the valid writable values for {{param|OperatingChannelBandwidth}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="20MHz"/>
            <enumeration value="40MHz">
              <description>wide mode</description>
            </enumeration>
            <enumeration value="80MHz">
              <description>802.11ac only</description>
            </enumeration>
            <enumeration value="160MHz">
              <description>802.11ac only</description>
            </enumeration>
            <enumeration value="Auto"></enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ChannelLastChange" access="readOnly" activeNotify="canDeny" dmr:previousParameter="AutoChannelRefreshPeriod">
        <description>
          The accumulated time in {{units}} since the current {{param|Channel}} came into use.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ChannelLastSelectionReason" access="readOnly">
        <description>
          The cause of the last channel selection.
        </description>
        <syntax>
          <string>
            <enumeration value="Manual">
              <description>Manual selection of the {{param|Channel}}.</description>
            </enumeration>
            <enumeration value="Auto_Startup">
              <description>Automatic channel selection procedure launched at radio startup.</description>
            </enumeration>
            <enumeration value="Auto_User">
              <description>Automatic channel selection procedure triggered by the user (e.g. via a GUI).</description>
            </enumeration>
            <enumeration value="Auto_Refresh">
              <description>Automatic channel selection procedure triggered by the {{param|AutoChannelRefreshPeriod}} timer.</description>
            </enumeration>
            <enumeration value="Auto_Dynamic">
              <description>Automatic channel selection procedure dynamically triggered to adjust to environmental interference.</description>
            </enumeration>
            <enumeration value="Auto_DFS">
              <description>Automatic channel selection procedure triggered by Dynamic Frequency Selection (DFS) {{bibref|ETSIBRAN}}.</description>
            </enumeration>
            <enumeration value="Unknown"/>
          </string>
        </syntax>
      </parameter>		
    </object>

    <object base="Device.WiFi.Radio.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1">
      <parameter name="TotalChannelChangeCount" access="readOnly" dmr:previousParameter="Noise">
        <description>
          The total number of times that the {{param|#.Channel}} has changed since the {{object|.WiFi.Radio.}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ManualChannelChangeCount" access="readOnly">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to manual channel selection since the {{object|.WiFi.Radio.}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoStartupChannelChangeCount" access="readOnly">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure launched at radio startup since the {{object|.WiFi.Radio.}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoUserChannelChangeCount" access="readOnly">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure triggered by the user (e.g. via a GUI) since the {{object|.WiFi.Radio.}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoRefreshChannelChangeCount" access="readOnly">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure triggered by the {{param|#.AutoChannelRefreshPeriod}} timer since the {{object|.WiFi.Radio.}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoDynamicChannelChangeCount" access="readOnly">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure dynamically triggered to adjust to environmental interference since the {{object|.WiFi.Radio.}} entered its current operating state.
        </description>
        <syntax>							
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoDFSChannelChangeCount" access="readOnly">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure triggered by DFS {{bibref|ETSIBRAN}} since the {{object|.WiFi.Radio.}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>

    <object base="Device.PPP.Interface.{i}.PPPoA." access="readOnly" minEntries="0" maxEntries="1">
      <description action="append">
        This object is OBSOLETED because it contains no standard parameters and its existence causes confusion.
      </description>
    </object>
    <object base="Device.PPP.Interface.{i}.PPPoE." access="readOnly" minEntries="0" maxEntries="1">
      <description action="append">
        PPPoE is only applicable when the lower layer provides Ethernet frames, e.g. ATM with EoA, PTM, or anything else that supports an Ethernet MAC.
      </description>
    </object>

    <object base="Device.WiFi.AccessPoint.{i}.AssociatedDevice.{i}." access="readOnly" minEntries="0" maxEntries="unbounded">
      <parameter base="LastDataDownlinkRate" access="readOnly">
        <syntax>
          <unsignedInt>
            <range minInclusive="1000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter base="LastDataUplinkRate" access="readOnly">
        <syntax>
          <unsignedInt>
            <range minInclusive="1000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>

    <object base="Device.Hosts.Host.{i}." access="readOnly" numEntriesParameter="HostNumberOfEntries" minEntries="0"  maxEntries="unbounded" dmr:fixedObject="true">
      <parameter base="Active" access="readOnly">
        <description action="append">
          Entries in Device.Hosts.Host SHOULD NOT be removed when they become inactive if there are {{object|WANStats}} statistics collected for the entry in the past seven days.
        </description>
      </parameter>
      <parameter base="ActiveLastChange" access="readOnly">
        <description action="append">
          Entries in Device.Hosts.Host SHOULD NOT be removed when they become inactive if there are {{object|WANStats}} statistics collected for the entry in the past seven days.
        </description>
      </parameter>
    </object>

    <object base="Device.XMPP." access="readOnly" minEntries="1" maxEntries="1">
      <parameter base="SupportedServerConnectAlgorithms" access="readOnly">
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>

    <object name="Device.Hosts.Host.{i}.WANStats." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        These count bytes or packets at the IP layer sent to the WAN, or received from the WAN.
      </description>
      <parameter name="BytesSent" access="readOnly">
        <description>
          The total number of bytes transmitted to the WAN from the Host device at the IP layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly">
        <description>
          The total number of bytes received from the WAN and sent to the Host device at the IP layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly">
        <description>
          The total number of IP packets transmitted to the WAN from the Host device.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly">
        <description>
          The total number of IP packets received from the WAN and sent to the Host device.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly">
        <description>
          The total number of outbound IP packets to the WAN from the Host device that could not be transmitted because of errors. These may be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly">
        <description>
          The total number of transmitted IP packets to the WAN from the Host device which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny">
        <description>The total number of outbound IP packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>

    <component ref="IL-181-L2TPv3"/>
    <component ref="IL-181-VXLAN"/>
    <component ref="IL-181-LMAP"/>

    <profile name="VDSL2:3" base="VDSL2:2">
      <object ref="Device.DSL.Line.{i}." requirement="present">
        <parameter ref="UpstreamAttenuation" requirement="readOnly" status="deleted"/>
        <parameter ref="DownstreamAttenuation" requirement="readOnly" status="deleted"/>
      </object>
    </profile>
  </model>

</dm:document>
